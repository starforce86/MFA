type User {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    firstname: String
    lastname: String

    username: String
    email: String! @unique
    phone: String @unique
    role: UserRole! @default(value: "USER_VIEWER")
    approved: Boolean

    password_hash: String!
    password_salt: String! @unique

    avatar: String
    background_image: String
    about_text: String

    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean

    artist: User @relation(name: "UserArtistRel")
    users: [User] @relation(name: "UserArtistRel")

    front_id_scan: String
    back_id_scan: String

    my_videos: [Video!]! @relation(name: "VideoAuthorRel")

    liked_videos: [Video!]! @relation(name: "VideoLikeUsersRel")
    watched_videos: [WatchedVideoUser!]! @relation(name: "WatchedVideoUserRel")

    my_subscription_users: [User!]! @relation(name: "UserSubscriptionsRel")
    subscribed_users: [User!]! @relation(name: "UserSubscriptionsRel")

    billing_subscription_active: Boolean! @default(value: "false")
    stripe_customer_id: String @unique
    stripe_subsciption_json: Json

    last_login_date: DateTime
}

type TransferPlan {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    artist: User! @relation(name: "TransferPlanArtistRel")
    subscriber: User! @relation(name: "TransferPlanSubscriberRel")
    year: Int!
    month: Int!
    amount: Int!
    ignore_status: Boolean! @default(value: "false")
    paid_status: Boolean! @default(value: "false")
    paid_date: DateTime
}

type TransferTransaction {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    artist: User! @relation(name: "TransferTransactionArtistRel")
    year: Int!
    month: Int!
    amount: Int!
    paid_status: Boolean! @default(value: "false")
    paid_date: DateTime
}

type Settings {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    name: String! @unique
    int_val: Int
    str_val: String
}

type ActivationCode {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    email: String! @unique
    valid_until: DateTime!
    code: String!
}

type RestoreCode {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    email: String! @unique
    valid_until: DateTime!
    code: String!
}

enum UserRole {
    USER_VIEWER
    USER_PUBLISHER
    MODERATOR
    ADMIN
}

type Video {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    title: String
    description: String
    publish_date: DateTime

    file_url: String
    video_duration: Int

    preview_url: String

    preview_video_url: String
    preview_video_duration: String

    author: User! @relation(name: "VideoAuthorRel")
    categories: [Category!]! @relation(name: "VideoCategoryRel")

    like_users: [User!]! @relation(name: "VideoLikeUsersRel")
    watched_users: [WatchedVideoUser!]! @relation(name: "WatchedUserVideoRel")

    tags: [Tag!]! @relation(name: "VideosTagsRel")

    deleted: Boolean! @default(value: "false")
}

type WatchedVideoUser {
    id: ID! @unique
    video: Video @relation(name: "WatchedUserVideoRel")
    user: User! @relation(name: "WatchedVideoUserRel")
    watched_seconds: Int! @default(value: 0)
}

type Tag {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    text: String!
    videos: [Video!]! @relation(name: "VideosTagsRel")
}

type Category {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    title: String!
    description: String

    videos: [Video!]! @relation(name: "VideoCategoryRel")
}

type Post {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    title: String!
    mainImageUrl: String
    text: String!
    author: User!
}

type Curriculum {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    title: String!
    text: String!
    order: Int
    author: User!
}

type PlayHistory {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    user: User!
    video: Video!
    playSeconds: Int!
    realPlaySeconds: Int!
}

type ChargeHistory {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    user: User!
    amount: Int!
    chargeDate: DateTime
}

type SubscriptionHistory {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    user: User!
    interval: String!
    amount: Int!
    subscriptionDate: DateTime
}

type ArtistFactorsSetting {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    promotion_factor: Float!
    minutes_exponent: Float!
    finder_fee_factor: Float!
    monthly_fee_duration: Int!
    monthly_fee_amount_per_month: Int!
    annual_fee_amount_per_month: Int!
}

type ArtistFactors {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    artist: User!
    promotion_factor: Float! @default(value: 1)
    minutes_exponent: Float! @default(value: 1)
    finder_fee_factor: Float! @default(value: 1)
    monthly_fee_duration: Int! @default(value: 6)
    monthly_fee_amount_per_month: Int! @default(value: 10)
    annual_fee_amount_per_month: Int! @default(value: 50)
}

type VideoTotalParameters {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    minutes_watched_multiplier: Float! @default(value: 0)
    exponent_for_minutes_watched: Float! @default(value: 0.5)
    star_rating_multiplier: Float! @default(value: 0)
    star_rating_on_off: Boolean! @default(value: "true")
}

type ProfitPoolFactor {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    overhead: Int! @default(value: 2000)
    monthly_multiplier: Float! @default(value: 1)
    finder_fee_multiplier: Float! @default(value: 1)
    profit_pool_option1_variable: Int! @default(value: 0)
    profit_pool_option1_multiplier: Float! @default(value: 1)
    profit_pool_option2_variable: Int! @default(value: 0)
    profit_pool_option2_multiplier: Float! @default(value: 1)
    profit_pool_percentage: Int! @default(value: 70)
    manual_change: Int! @default(value: 0)
}

type VideoDataForMonth {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    year: Int!
    month: Int!
    video: Video!
    video_length: Int!
    unique_users: Int! @default(value: 0)
    real_minutes_watched: Int! @default(value: 0)
    avg_minutes_watched: Int! @default(value: 0)
    exponent_applied: Int! @default(value: 0)
    minutes_after_exponent: Int! @default(value: 0)
}

type VideoParameters {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    video: Video!
    owner1: User @relation(name: "VideoParametersOwner1Rel")
    owner1_percentage: Int!
    owner2: User @relation(name: "VideoParametersOwner2Rel")
    owner2_percentage: Int!
    owner3: User @relation(name: "VideoParametersOwner3Rel")
    owner3_percentage: Int!
}

type VideoParametersForMonth {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    year: Int!
    month: Int!
    video: Video!
    owner1: User @relation(name: "VideoParametersForMonthOwner1Rel")
    owner1_percentage: Int!
    owner2: User @relation(name: "VideoParametersForMonthOwner2Rel")
    owner2_percentage: Int!
    owner3: User @relation(name: "VideoParametersForMonthOwner3Rel")
    owner3_percentage: Int!

    total_minutes: Float! @default(value: 0)
    owner1_minutes: Float! @default(value: 0)
    owner2_minutes: Float! @default(value: 0)
    owner3_minutes: Float! @default(value: 0)
}

type TotalMinutesForArtist {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    year: Int!
    month: Int!
    artist: User!

    minutes_as_owner1: Float! @default(value: 0)
    minutes_as_owner2: Float! @default(value: 0)
    minutes_as_owner3: Float! @default(value: 0)
    total_minutes: Float! @default(value: 0)
    artist_rating_factor: Float!
    final_minutes: Float! @default(value: 0)
    percent_of_profit_pool: Float! @default(value: 0)

    monthly_quantity: Int!
    annual_quantity: Int!
    finder_fee: Int! @default(value: 0)

    payment_from_profit_pool: Float! @default(value: 0)
    total_payment: Float! @default(value: 0)
}

type ProfitPoolCalculation {
    id: ID! @unique
    createdAt: DateTime!
    updatedAt: DateTime!

    year: Int!
    month: Int!
    annual_active_subscribers: Int! @default(value: 0)
    monthly_active_subscribers: Int! @default(value: 0)
    annual_subscription_rate: Int
    monthly_subscription_rate: Int
    annual_pool_revenue: Int! @default(value: 0)
    monthly_pool_revenue: Int! @default(value: 0)
    total_revenue: Int! @default(value: 0)

    total_payment_to_artists: Float! @default(value: 0)
    net_revenue: Float! @default(value: 0)
}
