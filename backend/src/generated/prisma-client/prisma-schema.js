module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.29.2). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type ActivationCode {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  valid_until: DateTime!
  code: String!
}

type ActivationCodeConnection {
  pageInfo: PageInfo!
  edges: [ActivationCodeEdge]!
  aggregate: AggregateActivationCode!
}

input ActivationCodeCreateInput {
  email: String!
  valid_until: DateTime!
  code: String!
}

type ActivationCodeEdge {
  node: ActivationCode!
  cursor: String!
}

enum ActivationCodeOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  email_ASC
  email_DESC
  valid_until_ASC
  valid_until_DESC
  code_ASC
  code_DESC
}

type ActivationCodePreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  valid_until: DateTime!
  code: String!
}

type ActivationCodeSubscriptionPayload {
  mutation: MutationType!
  node: ActivationCode
  updatedFields: [String!]
  previousValues: ActivationCodePreviousValues
}

input ActivationCodeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ActivationCodeWhereInput
  AND: [ActivationCodeSubscriptionWhereInput!]
  OR: [ActivationCodeSubscriptionWhereInput!]
  NOT: [ActivationCodeSubscriptionWhereInput!]
}

input ActivationCodeUpdateInput {
  email: String
  valid_until: DateTime
  code: String
}

input ActivationCodeUpdateManyMutationInput {
  email: String
  valid_until: DateTime
  code: String
}

input ActivationCodeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  valid_until: DateTime
  valid_until_not: DateTime
  valid_until_in: [DateTime!]
  valid_until_not_in: [DateTime!]
  valid_until_lt: DateTime
  valid_until_lte: DateTime
  valid_until_gt: DateTime
  valid_until_gte: DateTime
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  AND: [ActivationCodeWhereInput!]
  OR: [ActivationCodeWhereInput!]
  NOT: [ActivationCodeWhereInput!]
}

input ActivationCodeWhereUniqueInput {
  id: ID
  email: String
}

type AggregateActivationCode {
  count: Int!
}

type AggregateCategory {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type AggregateRestoreCode {
  count: Int!
}

type AggregateTag {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVideo {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Category {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
}

type CategoryConnection {
  pageInfo: PageInfo!
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  title: String!
  description: String
  videos: VideoCreateManyWithoutCategoriesInput
}

input CategoryCreateManyWithoutVideosInput {
  create: [CategoryCreateWithoutVideosInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateWithoutVideosInput {
  title: String!
  description: String
}

type CategoryEdge {
  node: Category!
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
}

type CategoryPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String
}

input CategoryScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  AND: [CategoryScalarWhereInput!]
  OR: [CategoryScalarWhereInput!]
  NOT: [CategoryScalarWhereInput!]
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
  AND: [CategorySubscriptionWhereInput!]
  OR: [CategorySubscriptionWhereInput!]
  NOT: [CategorySubscriptionWhereInput!]
}

input CategoryUpdateInput {
  title: String
  description: String
  videos: VideoUpdateManyWithoutCategoriesInput
}

input CategoryUpdateManyDataInput {
  title: String
  description: String
}

input CategoryUpdateManyMutationInput {
  title: String
  description: String
}

input CategoryUpdateManyWithoutVideosInput {
  create: [CategoryCreateWithoutVideosInput!]
  delete: [CategoryWhereUniqueInput!]
  connect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutVideosInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutVideosInput!]
  deleteMany: [CategoryScalarWhereInput!]
  updateMany: [CategoryUpdateManyWithWhereNestedInput!]
}

input CategoryUpdateManyWithWhereNestedInput {
  where: CategoryScalarWhereInput!
  data: CategoryUpdateManyDataInput!
}

input CategoryUpdateWithoutVideosDataInput {
  title: String
  description: String
}

input CategoryUpdateWithWhereUniqueWithoutVideosInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutVideosDataInput!
}

input CategoryUpsertWithWhereUniqueWithoutVideosInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutVideosDataInput!
  create: CategoryCreateWithoutVideosInput!
}

input CategoryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  videos_every: VideoWhereInput
  videos_some: VideoWhereInput
  videos_none: VideoWhereInput
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
}

input CategoryWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Json

scalar Long

type Mutation {
  createActivationCode(data: ActivationCodeCreateInput!): ActivationCode!
  updateActivationCode(data: ActivationCodeUpdateInput!, where: ActivationCodeWhereUniqueInput!): ActivationCode
  updateManyActivationCodes(data: ActivationCodeUpdateManyMutationInput!, where: ActivationCodeWhereInput): BatchPayload!
  upsertActivationCode(where: ActivationCodeWhereUniqueInput!, create: ActivationCodeCreateInput!, update: ActivationCodeUpdateInput!): ActivationCode!
  deleteActivationCode(where: ActivationCodeWhereUniqueInput!): ActivationCode
  deleteManyActivationCodes(where: ActivationCodeWhereInput): BatchPayload!
  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  createPost(data: PostCreateInput!): Post!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  deletePost(where: PostWhereUniqueInput!): Post
  deleteManyPosts(where: PostWhereInput): BatchPayload!
  createRestoreCode(data: RestoreCodeCreateInput!): RestoreCode!
  updateRestoreCode(data: RestoreCodeUpdateInput!, where: RestoreCodeWhereUniqueInput!): RestoreCode
  updateManyRestoreCodes(data: RestoreCodeUpdateManyMutationInput!, where: RestoreCodeWhereInput): BatchPayload!
  upsertRestoreCode(where: RestoreCodeWhereUniqueInput!, create: RestoreCodeCreateInput!, update: RestoreCodeUpdateInput!): RestoreCode!
  deleteRestoreCode(where: RestoreCodeWhereUniqueInput!): RestoreCode
  deleteManyRestoreCodes(where: RestoreCodeWhereInput): BatchPayload!
  createTag(data: TagCreateInput!): Tag!
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  updateManyTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!
  upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!
  deleteTag(where: TagWhereUniqueInput!): Tag
  deleteManyTags(where: TagWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  createVideo(data: VideoCreateInput!): Video!
  updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
  updateManyVideos(data: VideoUpdateManyMutationInput!, where: VideoWhereInput): BatchPayload!
  upsertVideo(where: VideoWhereUniqueInput!, create: VideoCreateInput!, update: VideoUpdateInput!): Video!
  deleteVideo(where: VideoWhereUniqueInput!): Video
  deleteManyVideos(where: VideoWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Post {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  mainImageUrl: String
  text: String!
  author: User!
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  title: String!
  mainImageUrl: String
  text: String!
  author: UserCreateOneInput!
}

type PostEdge {
  node: Post!
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  title_ASC
  title_DESC
  mainImageUrl_ASC
  mainImageUrl_DESC
  text_ASC
  text_DESC
}

type PostPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  mainImageUrl: String
  text: String!
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PostWhereInput
  AND: [PostSubscriptionWhereInput!]
  OR: [PostSubscriptionWhereInput!]
  NOT: [PostSubscriptionWhereInput!]
}

input PostUpdateInput {
  title: String
  mainImageUrl: String
  text: String
  author: UserUpdateOneRequiredInput
}

input PostUpdateManyMutationInput {
  title: String
  mainImageUrl: String
  text: String
}

input PostWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  mainImageUrl: String
  mainImageUrl_not: String
  mainImageUrl_in: [String!]
  mainImageUrl_not_in: [String!]
  mainImageUrl_lt: String
  mainImageUrl_lte: String
  mainImageUrl_gt: String
  mainImageUrl_gte: String
  mainImageUrl_contains: String
  mainImageUrl_not_contains: String
  mainImageUrl_starts_with: String
  mainImageUrl_not_starts_with: String
  mainImageUrl_ends_with: String
  mainImageUrl_not_ends_with: String
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  author: UserWhereInput
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
}

input PostWhereUniqueInput {
  id: ID
}

type Query {
  activationCode(where: ActivationCodeWhereUniqueInput!): ActivationCode
  activationCodes(where: ActivationCodeWhereInput, orderBy: ActivationCodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ActivationCode]!
  activationCodesConnection(where: ActivationCodeWhereInput, orderBy: ActivationCodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ActivationCodeConnection!
  category(where: CategoryWhereUniqueInput!): Category
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!
  post(where: PostWhereUniqueInput!): Post
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  restoreCode(where: RestoreCodeWhereUniqueInput!): RestoreCode
  restoreCodes(where: RestoreCodeWhereInput, orderBy: RestoreCodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RestoreCode]!
  restoreCodesConnection(where: RestoreCodeWhereInput, orderBy: RestoreCodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RestoreCodeConnection!
  tag(where: TagWhereUniqueInput!): Tag
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!
  tagsConnection(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  video(where: VideoWhereUniqueInput!): Video
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video]!
  videosConnection(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoConnection!
  node(id: ID!): Node
}

type RestoreCode {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  valid_until: DateTime!
  code: String!
}

type RestoreCodeConnection {
  pageInfo: PageInfo!
  edges: [RestoreCodeEdge]!
  aggregate: AggregateRestoreCode!
}

input RestoreCodeCreateInput {
  email: String!
  valid_until: DateTime!
  code: String!
}

type RestoreCodeEdge {
  node: RestoreCode!
  cursor: String!
}

enum RestoreCodeOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  email_ASC
  email_DESC
  valid_until_ASC
  valid_until_DESC
  code_ASC
  code_DESC
}

type RestoreCodePreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  valid_until: DateTime!
  code: String!
}

type RestoreCodeSubscriptionPayload {
  mutation: MutationType!
  node: RestoreCode
  updatedFields: [String!]
  previousValues: RestoreCodePreviousValues
}

input RestoreCodeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RestoreCodeWhereInput
  AND: [RestoreCodeSubscriptionWhereInput!]
  OR: [RestoreCodeSubscriptionWhereInput!]
  NOT: [RestoreCodeSubscriptionWhereInput!]
}

input RestoreCodeUpdateInput {
  email: String
  valid_until: DateTime
  code: String
}

input RestoreCodeUpdateManyMutationInput {
  email: String
  valid_until: DateTime
  code: String
}

input RestoreCodeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  valid_until: DateTime
  valid_until_not: DateTime
  valid_until_in: [DateTime!]
  valid_until_not_in: [DateTime!]
  valid_until_lt: DateTime
  valid_until_lte: DateTime
  valid_until_gt: DateTime
  valid_until_gte: DateTime
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  AND: [RestoreCodeWhereInput!]
  OR: [RestoreCodeWhereInput!]
  NOT: [RestoreCodeWhereInput!]
}

input RestoreCodeWhereUniqueInput {
  id: ID
  email: String
}

type Subscription {
  activationCode(where: ActivationCodeSubscriptionWhereInput): ActivationCodeSubscriptionPayload
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  restoreCode(where: RestoreCodeSubscriptionWhereInput): RestoreCodeSubscriptionPayload
  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  video(where: VideoSubscriptionWhereInput): VideoSubscriptionPayload
}

type Tag {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  text: String!
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
}

type TagConnection {
  pageInfo: PageInfo!
  edges: [TagEdge]!
  aggregate: AggregateTag!
}

input TagCreateInput {
  text: String!
  videos: VideoCreateManyWithoutTagsInput
}

input TagCreateManyWithoutVideosInput {
  create: [TagCreateWithoutVideosInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateWithoutVideosInput {
  text: String!
}

type TagEdge {
  node: Tag!
  cursor: String!
}

enum TagOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  text_ASC
  text_DESC
}

type TagPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  text: String!
}

input TagScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  AND: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
}

type TagSubscriptionPayload {
  mutation: MutationType!
  node: Tag
  updatedFields: [String!]
  previousValues: TagPreviousValues
}

input TagSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TagWhereInput
  AND: [TagSubscriptionWhereInput!]
  OR: [TagSubscriptionWhereInput!]
  NOT: [TagSubscriptionWhereInput!]
}

input TagUpdateInput {
  text: String
  videos: VideoUpdateManyWithoutTagsInput
}

input TagUpdateManyDataInput {
  text: String
}

input TagUpdateManyMutationInput {
  text: String
}

input TagUpdateManyWithoutVideosInput {
  create: [TagCreateWithoutVideosInput!]
  delete: [TagWhereUniqueInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutVideosInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutVideosInput!]
  deleteMany: [TagScalarWhereInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
}

input TagUpdateManyWithWhereNestedInput {
  where: TagScalarWhereInput!
  data: TagUpdateManyDataInput!
}

input TagUpdateWithoutVideosDataInput {
  text: String
}

input TagUpdateWithWhereUniqueWithoutVideosInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutVideosDataInput!
}

input TagUpsertWithWhereUniqueWithoutVideosInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutVideosDataInput!
  create: TagCreateWithoutVideosInput!
}

input TagWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  videos_every: VideoWhereInput
  videos_some: VideoWhereInput
  videos_none: VideoWhereInput
  AND: [TagWhereInput!]
  OR: [TagWhereInput!]
  NOT: [TagWhereInput!]
}

input TagWhereUniqueInput {
  id: ID
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole!
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  my_videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
  liked_videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
  watched_videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
  my_subscription_users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  subscribed_users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  billing_subscription_active: Boolean!
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoCreateManyWithoutAuthorInput
  liked_videos: VideoCreateManyWithoutLike_usersInput
  watched_videos: VideoCreateManyWithoutWatched_usersInput
  my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
  subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserCreateManyWithoutLiked_videosInput {
  create: [UserCreateWithoutLiked_videosInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutMy_subscription_usersInput {
  create: [UserCreateWithoutMy_subscription_usersInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutSubscribed_usersInput {
  create: [UserCreateWithoutSubscribed_usersInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutWatched_videosInput {
  create: [UserCreateWithoutWatched_videosInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutMy_videosInput {
  create: UserCreateWithoutMy_videosInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutLiked_videosInput {
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoCreateManyWithoutAuthorInput
  watched_videos: VideoCreateManyWithoutWatched_usersInput
  my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
  subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserCreateWithoutMy_subscription_usersInput {
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoCreateManyWithoutAuthorInput
  liked_videos: VideoCreateManyWithoutLike_usersInput
  watched_videos: VideoCreateManyWithoutWatched_usersInput
  subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserCreateWithoutMy_videosInput {
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  liked_videos: VideoCreateManyWithoutLike_usersInput
  watched_videos: VideoCreateManyWithoutWatched_usersInput
  my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
  subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserCreateWithoutSubscribed_usersInput {
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoCreateManyWithoutAuthorInput
  liked_videos: VideoCreateManyWithoutLike_usersInput
  watched_videos: VideoCreateManyWithoutWatched_usersInput
  my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserCreateWithoutWatched_videosInput {
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoCreateManyWithoutAuthorInput
  liked_videos: VideoCreateManyWithoutLike_usersInput
  my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
  subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  firstname_ASC
  firstname_DESC
  lastname_ASC
  lastname_DESC
  username_ASC
  username_DESC
  email_ASC
  email_DESC
  phone_ASC
  phone_DESC
  role_ASC
  role_DESC
  password_hash_ASC
  password_hash_DESC
  password_salt_ASC
  password_salt_DESC
  avatar_ASC
  avatar_DESC
  background_image_ASC
  background_image_DESC
  about_text_ASC
  about_text_DESC
  billing_subscription_active_ASC
  billing_subscription_active_DESC
  stripe_customer_id_ASC
  stripe_customer_id_DESC
  stripe_subsciption_json_ASC
  stripe_subsciption_json_DESC
  last_login_date_ASC
  last_login_date_DESC
}

type UserPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole!
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  billing_subscription_active: Boolean!
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

enum UserRole {
  USER_VIEWER
  USER_PUBLISHER
  MODERATOR
  ADMIN
}

input UserScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  firstname: String
  firstname_not: String
  firstname_in: [String!]
  firstname_not_in: [String!]
  firstname_lt: String
  firstname_lte: String
  firstname_gt: String
  firstname_gte: String
  firstname_contains: String
  firstname_not_contains: String
  firstname_starts_with: String
  firstname_not_starts_with: String
  firstname_ends_with: String
  firstname_not_ends_with: String
  lastname: String
  lastname_not: String
  lastname_in: [String!]
  lastname_not_in: [String!]
  lastname_lt: String
  lastname_lte: String
  lastname_gt: String
  lastname_gte: String
  lastname_contains: String
  lastname_not_contains: String
  lastname_starts_with: String
  lastname_not_starts_with: String
  lastname_ends_with: String
  lastname_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  role: UserRole
  role_not: UserRole
  role_in: [UserRole!]
  role_not_in: [UserRole!]
  password_hash: String
  password_hash_not: String
  password_hash_in: [String!]
  password_hash_not_in: [String!]
  password_hash_lt: String
  password_hash_lte: String
  password_hash_gt: String
  password_hash_gte: String
  password_hash_contains: String
  password_hash_not_contains: String
  password_hash_starts_with: String
  password_hash_not_starts_with: String
  password_hash_ends_with: String
  password_hash_not_ends_with: String
  password_salt: String
  password_salt_not: String
  password_salt_in: [String!]
  password_salt_not_in: [String!]
  password_salt_lt: String
  password_salt_lte: String
  password_salt_gt: String
  password_salt_gte: String
  password_salt_contains: String
  password_salt_not_contains: String
  password_salt_starts_with: String
  password_salt_not_starts_with: String
  password_salt_ends_with: String
  password_salt_not_ends_with: String
  avatar: String
  avatar_not: String
  avatar_in: [String!]
  avatar_not_in: [String!]
  avatar_lt: String
  avatar_lte: String
  avatar_gt: String
  avatar_gte: String
  avatar_contains: String
  avatar_not_contains: String
  avatar_starts_with: String
  avatar_not_starts_with: String
  avatar_ends_with: String
  avatar_not_ends_with: String
  background_image: String
  background_image_not: String
  background_image_in: [String!]
  background_image_not_in: [String!]
  background_image_lt: String
  background_image_lte: String
  background_image_gt: String
  background_image_gte: String
  background_image_contains: String
  background_image_not_contains: String
  background_image_starts_with: String
  background_image_not_starts_with: String
  background_image_ends_with: String
  background_image_not_ends_with: String
  about_text: String
  about_text_not: String
  about_text_in: [String!]
  about_text_not_in: [String!]
  about_text_lt: String
  about_text_lte: String
  about_text_gt: String
  about_text_gte: String
  about_text_contains: String
  about_text_not_contains: String
  about_text_starts_with: String
  about_text_not_starts_with: String
  about_text_ends_with: String
  about_text_not_ends_with: String
  billing_subscription_active: Boolean
  billing_subscription_active_not: Boolean
  stripe_customer_id: String
  stripe_customer_id_not: String
  stripe_customer_id_in: [String!]
  stripe_customer_id_not_in: [String!]
  stripe_customer_id_lt: String
  stripe_customer_id_lte: String
  stripe_customer_id_gt: String
  stripe_customer_id_gte: String
  stripe_customer_id_contains: String
  stripe_customer_id_not_contains: String
  stripe_customer_id_starts_with: String
  stripe_customer_id_not_starts_with: String
  stripe_customer_id_ends_with: String
  stripe_customer_id_not_ends_with: String
  last_login_date: DateTime
  last_login_date_not: DateTime
  last_login_date_in: [DateTime!]
  last_login_date_not_in: [DateTime!]
  last_login_date_lt: DateTime
  last_login_date_lte: DateTime
  last_login_date_gt: DateTime
  last_login_date_gte: DateTime
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateDataInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoUpdateManyWithoutAuthorInput
  liked_videos: VideoUpdateManyWithoutLike_usersInput
  watched_videos: VideoUpdateManyWithoutWatched_usersInput
  my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
  subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoUpdateManyWithoutAuthorInput
  liked_videos: VideoUpdateManyWithoutLike_usersInput
  watched_videos: VideoUpdateManyWithoutWatched_usersInput
  my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
  subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateManyDataInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateManyMutationInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateManyWithoutLiked_videosInput {
  create: [UserCreateWithoutLiked_videosInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutLiked_videosInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutLiked_videosInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutMy_subscription_usersInput {
  create: [UserCreateWithoutMy_subscription_usersInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutMy_subscription_usersInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutMy_subscription_usersInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutSubscribed_usersInput {
  create: [UserCreateWithoutSubscribed_usersInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutSubscribed_usersInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutSubscribed_usersInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutWatched_videosInput {
  create: [UserCreateWithoutWatched_videosInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutWatched_videosInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutWatched_videosInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutMy_videosInput {
  create: UserCreateWithoutMy_videosInput
  update: UserUpdateWithoutMy_videosDataInput
  upsert: UserUpsertWithoutMy_videosInput
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutLiked_videosDataInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoUpdateManyWithoutAuthorInput
  watched_videos: VideoUpdateManyWithoutWatched_usersInput
  my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
  subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateWithoutMy_subscription_usersDataInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoUpdateManyWithoutAuthorInput
  liked_videos: VideoUpdateManyWithoutLike_usersInput
  watched_videos: VideoUpdateManyWithoutWatched_usersInput
  subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateWithoutMy_videosDataInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  liked_videos: VideoUpdateManyWithoutLike_usersInput
  watched_videos: VideoUpdateManyWithoutWatched_usersInput
  my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
  subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateWithoutSubscribed_usersDataInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoUpdateManyWithoutAuthorInput
  liked_videos: VideoUpdateManyWithoutLike_usersInput
  watched_videos: VideoUpdateManyWithoutWatched_usersInput
  my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateWithoutWatched_videosDataInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  my_videos: VideoUpdateManyWithoutAuthorInput
  liked_videos: VideoUpdateManyWithoutLike_usersInput
  my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
  subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateWithWhereUniqueWithoutLiked_videosInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutLiked_videosDataInput!
}

input UserUpdateWithWhereUniqueWithoutMy_subscription_usersInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutMy_subscription_usersDataInput!
}

input UserUpdateWithWhereUniqueWithoutSubscribed_usersInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutSubscribed_usersDataInput!
}

input UserUpdateWithWhereUniqueWithoutWatched_videosInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutWatched_videosDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutMy_videosInput {
  update: UserUpdateWithoutMy_videosDataInput!
  create: UserCreateWithoutMy_videosInput!
}

input UserUpsertWithWhereUniqueWithoutLiked_videosInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutLiked_videosDataInput!
  create: UserCreateWithoutLiked_videosInput!
}

input UserUpsertWithWhereUniqueWithoutMy_subscription_usersInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutMy_subscription_usersDataInput!
  create: UserCreateWithoutMy_subscription_usersInput!
}

input UserUpsertWithWhereUniqueWithoutSubscribed_usersInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutSubscribed_usersDataInput!
  create: UserCreateWithoutSubscribed_usersInput!
}

input UserUpsertWithWhereUniqueWithoutWatched_videosInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutWatched_videosDataInput!
  create: UserCreateWithoutWatched_videosInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  firstname: String
  firstname_not: String
  firstname_in: [String!]
  firstname_not_in: [String!]
  firstname_lt: String
  firstname_lte: String
  firstname_gt: String
  firstname_gte: String
  firstname_contains: String
  firstname_not_contains: String
  firstname_starts_with: String
  firstname_not_starts_with: String
  firstname_ends_with: String
  firstname_not_ends_with: String
  lastname: String
  lastname_not: String
  lastname_in: [String!]
  lastname_not_in: [String!]
  lastname_lt: String
  lastname_lte: String
  lastname_gt: String
  lastname_gte: String
  lastname_contains: String
  lastname_not_contains: String
  lastname_starts_with: String
  lastname_not_starts_with: String
  lastname_ends_with: String
  lastname_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  role: UserRole
  role_not: UserRole
  role_in: [UserRole!]
  role_not_in: [UserRole!]
  password_hash: String
  password_hash_not: String
  password_hash_in: [String!]
  password_hash_not_in: [String!]
  password_hash_lt: String
  password_hash_lte: String
  password_hash_gt: String
  password_hash_gte: String
  password_hash_contains: String
  password_hash_not_contains: String
  password_hash_starts_with: String
  password_hash_not_starts_with: String
  password_hash_ends_with: String
  password_hash_not_ends_with: String
  password_salt: String
  password_salt_not: String
  password_salt_in: [String!]
  password_salt_not_in: [String!]
  password_salt_lt: String
  password_salt_lte: String
  password_salt_gt: String
  password_salt_gte: String
  password_salt_contains: String
  password_salt_not_contains: String
  password_salt_starts_with: String
  password_salt_not_starts_with: String
  password_salt_ends_with: String
  password_salt_not_ends_with: String
  avatar: String
  avatar_not: String
  avatar_in: [String!]
  avatar_not_in: [String!]
  avatar_lt: String
  avatar_lte: String
  avatar_gt: String
  avatar_gte: String
  avatar_contains: String
  avatar_not_contains: String
  avatar_starts_with: String
  avatar_not_starts_with: String
  avatar_ends_with: String
  avatar_not_ends_with: String
  background_image: String
  background_image_not: String
  background_image_in: [String!]
  background_image_not_in: [String!]
  background_image_lt: String
  background_image_lte: String
  background_image_gt: String
  background_image_gte: String
  background_image_contains: String
  background_image_not_contains: String
  background_image_starts_with: String
  background_image_not_starts_with: String
  background_image_ends_with: String
  background_image_not_ends_with: String
  about_text: String
  about_text_not: String
  about_text_in: [String!]
  about_text_not_in: [String!]
  about_text_lt: String
  about_text_lte: String
  about_text_gt: String
  about_text_gte: String
  about_text_contains: String
  about_text_not_contains: String
  about_text_starts_with: String
  about_text_not_starts_with: String
  about_text_ends_with: String
  about_text_not_ends_with: String
  my_videos_every: VideoWhereInput
  my_videos_some: VideoWhereInput
  my_videos_none: VideoWhereInput
  liked_videos_every: VideoWhereInput
  liked_videos_some: VideoWhereInput
  liked_videos_none: VideoWhereInput
  watched_videos_every: VideoWhereInput
  watched_videos_some: VideoWhereInput
  watched_videos_none: VideoWhereInput
  my_subscription_users_every: UserWhereInput
  my_subscription_users_some: UserWhereInput
  my_subscription_users_none: UserWhereInput
  subscribed_users_every: UserWhereInput
  subscribed_users_some: UserWhereInput
  subscribed_users_none: UserWhereInput
  billing_subscription_active: Boolean
  billing_subscription_active_not: Boolean
  stripe_customer_id: String
  stripe_customer_id_not: String
  stripe_customer_id_in: [String!]
  stripe_customer_id_not_in: [String!]
  stripe_customer_id_lt: String
  stripe_customer_id_lte: String
  stripe_customer_id_gt: String
  stripe_customer_id_gte: String
  stripe_customer_id_contains: String
  stripe_customer_id_not_contains: String
  stripe_customer_id_starts_with: String
  stripe_customer_id_not_starts_with: String
  stripe_customer_id_ends_with: String
  stripe_customer_id_not_ends_with: String
  last_login_date: DateTime
  last_login_date_not: DateTime
  last_login_date_in: [DateTime!]
  last_login_date_not_in: [DateTime!]
  last_login_date_lt: DateTime
  last_login_date_lte: DateTime
  last_login_date_gt: DateTime
  last_login_date_gte: DateTime
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
  phone: String
  password_salt: String
  stripe_customer_id: String
}

type Video {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: User!
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
  like_users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  watched_users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
}

type VideoConnection {
  pageInfo: PageInfo!
  edges: [VideoEdge]!
  aggregate: AggregateVideo!
}

input VideoCreateInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserCreateOneWithoutMy_videosInput!
  categories: CategoryCreateManyWithoutVideosInput
  like_users: UserCreateManyWithoutLiked_videosInput
  watched_users: UserCreateManyWithoutWatched_videosInput
  tags: TagCreateManyWithoutVideosInput
}

input VideoCreateManyWithoutAuthorInput {
  create: [VideoCreateWithoutAuthorInput!]
  connect: [VideoWhereUniqueInput!]
}

input VideoCreateManyWithoutCategoriesInput {
  create: [VideoCreateWithoutCategoriesInput!]
  connect: [VideoWhereUniqueInput!]
}

input VideoCreateManyWithoutLike_usersInput {
  create: [VideoCreateWithoutLike_usersInput!]
  connect: [VideoWhereUniqueInput!]
}

input VideoCreateManyWithoutTagsInput {
  create: [VideoCreateWithoutTagsInput!]
  connect: [VideoWhereUniqueInput!]
}

input VideoCreateManyWithoutWatched_usersInput {
  create: [VideoCreateWithoutWatched_usersInput!]
  connect: [VideoWhereUniqueInput!]
}

input VideoCreateWithoutAuthorInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  categories: CategoryCreateManyWithoutVideosInput
  like_users: UserCreateManyWithoutLiked_videosInput
  watched_users: UserCreateManyWithoutWatched_videosInput
  tags: TagCreateManyWithoutVideosInput
}

input VideoCreateWithoutCategoriesInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserCreateOneWithoutMy_videosInput!
  like_users: UserCreateManyWithoutLiked_videosInput
  watched_users: UserCreateManyWithoutWatched_videosInput
  tags: TagCreateManyWithoutVideosInput
}

input VideoCreateWithoutLike_usersInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserCreateOneWithoutMy_videosInput!
  categories: CategoryCreateManyWithoutVideosInput
  watched_users: UserCreateManyWithoutWatched_videosInput
  tags: TagCreateManyWithoutVideosInput
}

input VideoCreateWithoutTagsInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserCreateOneWithoutMy_videosInput!
  categories: CategoryCreateManyWithoutVideosInput
  like_users: UserCreateManyWithoutLiked_videosInput
  watched_users: UserCreateManyWithoutWatched_videosInput
}

input VideoCreateWithoutWatched_usersInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserCreateOneWithoutMy_videosInput!
  categories: CategoryCreateManyWithoutVideosInput
  like_users: UserCreateManyWithoutLiked_videosInput
  tags: TagCreateManyWithoutVideosInput
}

type VideoEdge {
  node: Video!
  cursor: String!
}

enum VideoOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  publish_date_ASC
  publish_date_DESC
  file_url_ASC
  file_url_DESC
  video_duration_ASC
  video_duration_DESC
  preview_url_ASC
  preview_url_DESC
  preview_video_url_ASC
  preview_video_url_DESC
  preview_video_duration_ASC
  preview_video_duration_DESC
}

type VideoPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
}

input VideoScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  publish_date: DateTime
  publish_date_not: DateTime
  publish_date_in: [DateTime!]
  publish_date_not_in: [DateTime!]
  publish_date_lt: DateTime
  publish_date_lte: DateTime
  publish_date_gt: DateTime
  publish_date_gte: DateTime
  file_url: String
  file_url_not: String
  file_url_in: [String!]
  file_url_not_in: [String!]
  file_url_lt: String
  file_url_lte: String
  file_url_gt: String
  file_url_gte: String
  file_url_contains: String
  file_url_not_contains: String
  file_url_starts_with: String
  file_url_not_starts_with: String
  file_url_ends_with: String
  file_url_not_ends_with: String
  video_duration: Int
  video_duration_not: Int
  video_duration_in: [Int!]
  video_duration_not_in: [Int!]
  video_duration_lt: Int
  video_duration_lte: Int
  video_duration_gt: Int
  video_duration_gte: Int
  preview_url: String
  preview_url_not: String
  preview_url_in: [String!]
  preview_url_not_in: [String!]
  preview_url_lt: String
  preview_url_lte: String
  preview_url_gt: String
  preview_url_gte: String
  preview_url_contains: String
  preview_url_not_contains: String
  preview_url_starts_with: String
  preview_url_not_starts_with: String
  preview_url_ends_with: String
  preview_url_not_ends_with: String
  preview_video_url: String
  preview_video_url_not: String
  preview_video_url_in: [String!]
  preview_video_url_not_in: [String!]
  preview_video_url_lt: String
  preview_video_url_lte: String
  preview_video_url_gt: String
  preview_video_url_gte: String
  preview_video_url_contains: String
  preview_video_url_not_contains: String
  preview_video_url_starts_with: String
  preview_video_url_not_starts_with: String
  preview_video_url_ends_with: String
  preview_video_url_not_ends_with: String
  preview_video_duration: String
  preview_video_duration_not: String
  preview_video_duration_in: [String!]
  preview_video_duration_not_in: [String!]
  preview_video_duration_lt: String
  preview_video_duration_lte: String
  preview_video_duration_gt: String
  preview_video_duration_gte: String
  preview_video_duration_contains: String
  preview_video_duration_not_contains: String
  preview_video_duration_starts_with: String
  preview_video_duration_not_starts_with: String
  preview_video_duration_ends_with: String
  preview_video_duration_not_ends_with: String
  AND: [VideoScalarWhereInput!]
  OR: [VideoScalarWhereInput!]
  NOT: [VideoScalarWhereInput!]
}

type VideoSubscriptionPayload {
  mutation: MutationType!
  node: Video
  updatedFields: [String!]
  previousValues: VideoPreviousValues
}

input VideoSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VideoWhereInput
  AND: [VideoSubscriptionWhereInput!]
  OR: [VideoSubscriptionWhereInput!]
  NOT: [VideoSubscriptionWhereInput!]
}

input VideoUpdateInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserUpdateOneRequiredWithoutMy_videosInput
  categories: CategoryUpdateManyWithoutVideosInput
  like_users: UserUpdateManyWithoutLiked_videosInput
  watched_users: UserUpdateManyWithoutWatched_videosInput
  tags: TagUpdateManyWithoutVideosInput
}

input VideoUpdateManyDataInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
}

input VideoUpdateManyMutationInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
}

input VideoUpdateManyWithoutAuthorInput {
  create: [VideoCreateWithoutAuthorInput!]
  delete: [VideoWhereUniqueInput!]
  connect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  disconnect: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutAuthorInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutAuthorInput!]
  deleteMany: [VideoScalarWhereInput!]
  updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithoutCategoriesInput {
  create: [VideoCreateWithoutCategoriesInput!]
  delete: [VideoWhereUniqueInput!]
  connect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  disconnect: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutCategoriesInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutCategoriesInput!]
  deleteMany: [VideoScalarWhereInput!]
  updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithoutLike_usersInput {
  create: [VideoCreateWithoutLike_usersInput!]
  delete: [VideoWhereUniqueInput!]
  connect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  disconnect: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutLike_usersInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutLike_usersInput!]
  deleteMany: [VideoScalarWhereInput!]
  updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithoutTagsInput {
  create: [VideoCreateWithoutTagsInput!]
  delete: [VideoWhereUniqueInput!]
  connect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  disconnect: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutTagsInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutTagsInput!]
  deleteMany: [VideoScalarWhereInput!]
  updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithoutWatched_usersInput {
  create: [VideoCreateWithoutWatched_usersInput!]
  delete: [VideoWhereUniqueInput!]
  connect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  disconnect: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutWatched_usersInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutWatched_usersInput!]
  deleteMany: [VideoScalarWhereInput!]
  updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithWhereNestedInput {
  where: VideoScalarWhereInput!
  data: VideoUpdateManyDataInput!
}

input VideoUpdateWithoutAuthorDataInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  categories: CategoryUpdateManyWithoutVideosInput
  like_users: UserUpdateManyWithoutLiked_videosInput
  watched_users: UserUpdateManyWithoutWatched_videosInput
  tags: TagUpdateManyWithoutVideosInput
}

input VideoUpdateWithoutCategoriesDataInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserUpdateOneRequiredWithoutMy_videosInput
  like_users: UserUpdateManyWithoutLiked_videosInput
  watched_users: UserUpdateManyWithoutWatched_videosInput
  tags: TagUpdateManyWithoutVideosInput
}

input VideoUpdateWithoutLike_usersDataInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserUpdateOneRequiredWithoutMy_videosInput
  categories: CategoryUpdateManyWithoutVideosInput
  watched_users: UserUpdateManyWithoutWatched_videosInput
  tags: TagUpdateManyWithoutVideosInput
}

input VideoUpdateWithoutTagsDataInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserUpdateOneRequiredWithoutMy_videosInput
  categories: CategoryUpdateManyWithoutVideosInput
  like_users: UserUpdateManyWithoutLiked_videosInput
  watched_users: UserUpdateManyWithoutWatched_videosInput
}

input VideoUpdateWithoutWatched_usersDataInput {
  title: String
  description: String
  publish_date: DateTime
  file_url: String
  video_duration: Int
  preview_url: String
  preview_video_url: String
  preview_video_duration: String
  author: UserUpdateOneRequiredWithoutMy_videosInput
  categories: CategoryUpdateManyWithoutVideosInput
  like_users: UserUpdateManyWithoutLiked_videosInput
  tags: TagUpdateManyWithoutVideosInput
}

input VideoUpdateWithWhereUniqueWithoutAuthorInput {
  where: VideoWhereUniqueInput!
  data: VideoUpdateWithoutAuthorDataInput!
}

input VideoUpdateWithWhereUniqueWithoutCategoriesInput {
  where: VideoWhereUniqueInput!
  data: VideoUpdateWithoutCategoriesDataInput!
}

input VideoUpdateWithWhereUniqueWithoutLike_usersInput {
  where: VideoWhereUniqueInput!
  data: VideoUpdateWithoutLike_usersDataInput!
}

input VideoUpdateWithWhereUniqueWithoutTagsInput {
  where: VideoWhereUniqueInput!
  data: VideoUpdateWithoutTagsDataInput!
}

input VideoUpdateWithWhereUniqueWithoutWatched_usersInput {
  where: VideoWhereUniqueInput!
  data: VideoUpdateWithoutWatched_usersDataInput!
}

input VideoUpsertWithWhereUniqueWithoutAuthorInput {
  where: VideoWhereUniqueInput!
  update: VideoUpdateWithoutAuthorDataInput!
  create: VideoCreateWithoutAuthorInput!
}

input VideoUpsertWithWhereUniqueWithoutCategoriesInput {
  where: VideoWhereUniqueInput!
  update: VideoUpdateWithoutCategoriesDataInput!
  create: VideoCreateWithoutCategoriesInput!
}

input VideoUpsertWithWhereUniqueWithoutLike_usersInput {
  where: VideoWhereUniqueInput!
  update: VideoUpdateWithoutLike_usersDataInput!
  create: VideoCreateWithoutLike_usersInput!
}

input VideoUpsertWithWhereUniqueWithoutTagsInput {
  where: VideoWhereUniqueInput!
  update: VideoUpdateWithoutTagsDataInput!
  create: VideoCreateWithoutTagsInput!
}

input VideoUpsertWithWhereUniqueWithoutWatched_usersInput {
  where: VideoWhereUniqueInput!
  update: VideoUpdateWithoutWatched_usersDataInput!
  create: VideoCreateWithoutWatched_usersInput!
}

input VideoWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  publish_date: DateTime
  publish_date_not: DateTime
  publish_date_in: [DateTime!]
  publish_date_not_in: [DateTime!]
  publish_date_lt: DateTime
  publish_date_lte: DateTime
  publish_date_gt: DateTime
  publish_date_gte: DateTime
  file_url: String
  file_url_not: String
  file_url_in: [String!]
  file_url_not_in: [String!]
  file_url_lt: String
  file_url_lte: String
  file_url_gt: String
  file_url_gte: String
  file_url_contains: String
  file_url_not_contains: String
  file_url_starts_with: String
  file_url_not_starts_with: String
  file_url_ends_with: String
  file_url_not_ends_with: String
  video_duration: Int
  video_duration_not: Int
  video_duration_in: [Int!]
  video_duration_not_in: [Int!]
  video_duration_lt: Int
  video_duration_lte: Int
  video_duration_gt: Int
  video_duration_gte: Int
  preview_url: String
  preview_url_not: String
  preview_url_in: [String!]
  preview_url_not_in: [String!]
  preview_url_lt: String
  preview_url_lte: String
  preview_url_gt: String
  preview_url_gte: String
  preview_url_contains: String
  preview_url_not_contains: String
  preview_url_starts_with: String
  preview_url_not_starts_with: String
  preview_url_ends_with: String
  preview_url_not_ends_with: String
  preview_video_url: String
  preview_video_url_not: String
  preview_video_url_in: [String!]
  preview_video_url_not_in: [String!]
  preview_video_url_lt: String
  preview_video_url_lte: String
  preview_video_url_gt: String
  preview_video_url_gte: String
  preview_video_url_contains: String
  preview_video_url_not_contains: String
  preview_video_url_starts_with: String
  preview_video_url_not_starts_with: String
  preview_video_url_ends_with: String
  preview_video_url_not_ends_with: String
  preview_video_duration: String
  preview_video_duration_not: String
  preview_video_duration_in: [String!]
  preview_video_duration_not_in: [String!]
  preview_video_duration_lt: String
  preview_video_duration_lte: String
  preview_video_duration_gt: String
  preview_video_duration_gte: String
  preview_video_duration_contains: String
  preview_video_duration_not_contains: String
  preview_video_duration_starts_with: String
  preview_video_duration_not_starts_with: String
  preview_video_duration_ends_with: String
  preview_video_duration_not_ends_with: String
  author: UserWhereInput
  categories_every: CategoryWhereInput
  categories_some: CategoryWhereInput
  categories_none: CategoryWhereInput
  like_users_every: UserWhereInput
  like_users_some: UserWhereInput
  like_users_none: UserWhereInput
  watched_users_every: UserWhereInput
  watched_users_some: UserWhereInput
  watched_users_none: UserWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
  AND: [VideoWhereInput!]
  OR: [VideoWhereInput!]
  NOT: [VideoWhereInput!]
}

input VideoWhereUniqueInput {
  id: ID
}
`
      }
    