type Mutation {
    sign_up(
        email: String!, 
        firstname: String, 
        lastname: String, 
        phone: String, 
        password: String, 
        activation_code: String, 
        promo_code: String, 
        step: SignUpStep!, 
        role: UserRole,
        external_account_type: String,
        account_number: String,
        routing_number: String,
        token: String,
        birthdate: String,
        ssn: String
    ): UserAuthResponse!
    sign_in(email: String!, password: String!): UserAuthResponse!
    change_password(old_password: String!, new_password: String!): UserAuthResponse!
    changePromoCode(promo_code: String!): Boolean
    restore_password(email: String!, restore_code: String, new_password: String, step: RestorePasswordStep!): UserAuthResponse!
    purchase(stripe_tok_token: String!, plan: StripePlan!): Boolean
    changeCard(newStripeTokToken: String!): Boolean
    delete_subscription: Boolean
    addContactUsMessage(email: String! text: String!): Boolean
    addWatchedVideo(videoId: String!): Boolean
    updateWatchedVideo(videoId: String! watchedSeconds: Int!): Boolean
    transfer(year: Int, month: Int): Boolean

    createActivationCode(data: ActivationCodeCreateInput!): ActivationCode!
    updateActivationCode(data: ActivationCodeUpdateInput!, where: ActivationCodeWhereUniqueInput!): ActivationCode
    updateManyActivationCodes(data: ActivationCodeUpdateManyMutationInput!, where: ActivationCodeWhereInput): BatchPayload!
    upsertActivationCode(where: ActivationCodeWhereUniqueInput!, create: ActivationCodeCreateInput!, update: ActivationCodeUpdateInput!): ActivationCode!
    deleteActivationCode(where: ActivationCodeWhereUniqueInput!): ActivationCode
    deleteManyActivationCodes(where: ActivationCodeWhereInput): BatchPayload!
    createArtistFactors(data: ArtistFactorsCreateInput!): ArtistFactors!
    updateArtistFactors(data: ArtistFactorsUpdateInput!, where: ArtistFactorsWhereUniqueInput!): ArtistFactors
    updateManyArtistFactorses(data: ArtistFactorsUpdateManyMutationInput!, where: ArtistFactorsWhereInput): BatchPayload!
    upsertArtistFactors(where: ArtistFactorsWhereUniqueInput!, create: ArtistFactorsCreateInput!, update: ArtistFactorsUpdateInput!): ArtistFactors!
    deleteArtistFactors(where: ArtistFactorsWhereUniqueInput!): ArtistFactors
    deleteManyArtistFactorses(where: ArtistFactorsWhereInput): BatchPayload!
    createArtistFactorsSetting(data: ArtistFactorsSettingCreateInput!): ArtistFactorsSetting!
    updateArtistFactorsSetting(data: ArtistFactorsSettingUpdateInput!, where: ArtistFactorsSettingWhereUniqueInput!): ArtistFactorsSetting
    updateManyArtistFactorsSettings(data: ArtistFactorsSettingUpdateManyMutationInput!, where: ArtistFactorsSettingWhereInput): BatchPayload!
    upsertArtistFactorsSetting(where: ArtistFactorsSettingWhereUniqueInput!, create: ArtistFactorsSettingCreateInput!, update: ArtistFactorsSettingUpdateInput!): ArtistFactorsSetting!
    deleteArtistFactorsSetting(where: ArtistFactorsSettingWhereUniqueInput!): ArtistFactorsSetting
    deleteManyArtistFactorsSettings(where: ArtistFactorsSettingWhereInput): BatchPayload!
    createCategory(data: CategoryCreateInput!): Category!
    updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
    updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
    upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
    deleteCategory(where: CategoryWhereUniqueInput!): Category
    deleteManyCategories(where: CategoryWhereInput): BatchPayload!
    createChargeHistory(data: ChargeHistoryCreateInput!): ChargeHistory!
    updateChargeHistory(data: ChargeHistoryUpdateInput!, where: ChargeHistoryWhereUniqueInput!): ChargeHistory
    updateManyChargeHistories(data: ChargeHistoryUpdateManyMutationInput!, where: ChargeHistoryWhereInput): BatchPayload!
    upsertChargeHistory(where: ChargeHistoryWhereUniqueInput!, create: ChargeHistoryCreateInput!, update: ChargeHistoryUpdateInput!): ChargeHistory!
    deleteChargeHistory(where: ChargeHistoryWhereUniqueInput!): ChargeHistory
    deleteManyChargeHistories(where: ChargeHistoryWhereInput): BatchPayload!
    createCurriculum(data: CurriculumCreateInput!): Curriculum!
    updateCurriculum(data: CurriculumUpdateInput!, where: CurriculumWhereUniqueInput!): Curriculum
    updateManyCurricula(data: CurriculumUpdateManyMutationInput!, where: CurriculumWhereInput): BatchPayload!
    upsertCurriculum(where: CurriculumWhereUniqueInput!, create: CurriculumCreateInput!, update: CurriculumUpdateInput!): Curriculum!
    deleteCurriculum(where: CurriculumWhereUniqueInput!): Curriculum
    deleteManyCurricula(where: CurriculumWhereInput): BatchPayload!
    createPlayHistory(data: PlayHistoryCreateInput!): PlayHistory!
    updatePlayHistory(data: PlayHistoryUpdateInput!, where: PlayHistoryWhereUniqueInput!): PlayHistory
    updateManyPlayHistories(data: PlayHistoryUpdateManyMutationInput!, where: PlayHistoryWhereInput): BatchPayload!
    upsertPlayHistory(where: PlayHistoryWhereUniqueInput!, create: PlayHistoryCreateInput!, update: PlayHistoryUpdateInput!): PlayHistory!
    deletePlayHistory(where: PlayHistoryWhereUniqueInput!): PlayHistory
    deleteManyPlayHistories(where: PlayHistoryWhereInput): BatchPayload!
    createPost(data: PostCreateInput!): Post!
    updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
    updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
    upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
    deletePost(where: PostWhereUniqueInput!): Post
    deleteManyPosts(where: PostWhereInput): BatchPayload!
    createProfitPoolCalculation(data: ProfitPoolCalculationCreateInput!): ProfitPoolCalculation!
    updateProfitPoolCalculation(data: ProfitPoolCalculationUpdateInput!, where: ProfitPoolCalculationWhereUniqueInput!): ProfitPoolCalculation
    updateManyProfitPoolCalculations(data: ProfitPoolCalculationUpdateManyMutationInput!, where: ProfitPoolCalculationWhereInput): BatchPayload!
    upsertProfitPoolCalculation(where: ProfitPoolCalculationWhereUniqueInput!, create: ProfitPoolCalculationCreateInput!, update: ProfitPoolCalculationUpdateInput!): ProfitPoolCalculation!
    deleteProfitPoolCalculation(where: ProfitPoolCalculationWhereUniqueInput!): ProfitPoolCalculation
    deleteManyProfitPoolCalculations(where: ProfitPoolCalculationWhereInput): BatchPayload!
    createProfitPoolFactor(data: ProfitPoolFactorCreateInput!): ProfitPoolFactor!
    updateProfitPoolFactor(data: ProfitPoolFactorUpdateInput!, where: ProfitPoolFactorWhereUniqueInput!): ProfitPoolFactor
    updateManyProfitPoolFactors(data: ProfitPoolFactorUpdateManyMutationInput!, where: ProfitPoolFactorWhereInput): BatchPayload!
    upsertProfitPoolFactor(where: ProfitPoolFactorWhereUniqueInput!, create: ProfitPoolFactorCreateInput!, update: ProfitPoolFactorUpdateInput!): ProfitPoolFactor!
    deleteProfitPoolFactor(where: ProfitPoolFactorWhereUniqueInput!): ProfitPoolFactor
    deleteManyProfitPoolFactors(where: ProfitPoolFactorWhereInput): BatchPayload!
    createPromoCode(data: PromoCodeCreateInput!): PromoCode!
    updatePromoCode(data: PromoCodeUpdateInput!, where: PromoCodeWhereUniqueInput!): PromoCode
    updateManyPromoCodes(data: PromoCodeUpdateManyMutationInput!, where: PromoCodeWhereInput): BatchPayload!
    upsertPromoCode(where: PromoCodeWhereUniqueInput!, create: PromoCodeCreateInput!, update: PromoCodeUpdateInput!): PromoCode!
    deletePromoCode(where: PromoCodeWhereUniqueInput!): PromoCode
    deleteManyPromoCodes(where: PromoCodeWhereInput): BatchPayload!
    createRestoreCode(data: RestoreCodeCreateInput!): RestoreCode!
    updateRestoreCode(data: RestoreCodeUpdateInput!, where: RestoreCodeWhereUniqueInput!): RestoreCode
    updateManyRestoreCodes(data: RestoreCodeUpdateManyMutationInput!, where: RestoreCodeWhereInput): BatchPayload!
    upsertRestoreCode(where: RestoreCodeWhereUniqueInput!, create: RestoreCodeCreateInput!, update: RestoreCodeUpdateInput!): RestoreCode!
    deleteRestoreCode(where: RestoreCodeWhereUniqueInput!): RestoreCode
    deleteManyRestoreCodes(where: RestoreCodeWhereInput): BatchPayload!
    createSettings(data: SettingsCreateInput!): Settings!
    updateSettings(data: SettingsUpdateInput!, where: SettingsWhereUniqueInput!): Settings
    updateManySettingses(data: SettingsUpdateManyMutationInput!, where: SettingsWhereInput): BatchPayload!
    upsertSettings(where: SettingsWhereUniqueInput!, create: SettingsCreateInput!, update: SettingsUpdateInput!): Settings!
    deleteSettings(where: SettingsWhereUniqueInput!): Settings
    deleteManySettingses(where: SettingsWhereInput): BatchPayload!
    createSubscriptionHistory(data: SubscriptionHistoryCreateInput!): SubscriptionHistory!
    updateSubscriptionHistory(data: SubscriptionHistoryUpdateInput!, where: SubscriptionHistoryWhereUniqueInput!): SubscriptionHistory
    updateManySubscriptionHistories(data: SubscriptionHistoryUpdateManyMutationInput!, where: SubscriptionHistoryWhereInput): BatchPayload!
    upsertSubscriptionHistory(where: SubscriptionHistoryWhereUniqueInput!, create: SubscriptionHistoryCreateInput!, update: SubscriptionHistoryUpdateInput!): SubscriptionHistory!
    deleteSubscriptionHistory(where: SubscriptionHistoryWhereUniqueInput!): SubscriptionHistory
    deleteManySubscriptionHistories(where: SubscriptionHistoryWhereInput): BatchPayload!
    createTag(data: TagCreateInput!): Tag!
    updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
    updateManyTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!
    upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!
    deleteTag(where: TagWhereUniqueInput!): Tag
    deleteManyTags(where: TagWhereInput): BatchPayload!
    createTotalMinutesForArtist(data: TotalMinutesForArtistCreateInput!): TotalMinutesForArtist!
    updateTotalMinutesForArtist(data: TotalMinutesForArtistUpdateInput!, where: TotalMinutesForArtistWhereUniqueInput!): TotalMinutesForArtist
    updateManyTotalMinutesForArtists(data: TotalMinutesForArtistUpdateManyMutationInput!, where: TotalMinutesForArtistWhereInput): BatchPayload!
    upsertTotalMinutesForArtist(where: TotalMinutesForArtistWhereUniqueInput!, create: TotalMinutesForArtistCreateInput!, update: TotalMinutesForArtistUpdateInput!): TotalMinutesForArtist!
    deleteTotalMinutesForArtist(where: TotalMinutesForArtistWhereUniqueInput!): TotalMinutesForArtist
    deleteManyTotalMinutesForArtists(where: TotalMinutesForArtistWhereInput): BatchPayload!
    createTransferPlan(data: TransferPlanCreateInput!): TransferPlan!
    updateTransferPlan(data: TransferPlanUpdateInput!, where: TransferPlanWhereUniqueInput!): TransferPlan
    updateManyTransferPlans(data: TransferPlanUpdateManyMutationInput!, where: TransferPlanWhereInput): BatchPayload!
    upsertTransferPlan(where: TransferPlanWhereUniqueInput!, create: TransferPlanCreateInput!, update: TransferPlanUpdateInput!): TransferPlan!
    deleteTransferPlan(where: TransferPlanWhereUniqueInput!): TransferPlan
    deleteManyTransferPlans(where: TransferPlanWhereInput): BatchPayload!
    createTransferTransaction(data: TransferTransactionCreateInput!): TransferTransaction!
    updateTransferTransaction(data: TransferTransactionUpdateInput!, where: TransferTransactionWhereUniqueInput!): TransferTransaction
    updateManyTransferTransactions(data: TransferTransactionUpdateManyMutationInput!, where: TransferTransactionWhereInput): BatchPayload!
    upsertTransferTransaction(where: TransferTransactionWhereUniqueInput!, create: TransferTransactionCreateInput!, update: TransferTransactionUpdateInput!): TransferTransaction!
    deleteTransferTransaction(where: TransferTransactionWhereUniqueInput!): TransferTransaction
    deleteManyTransferTransactions(where: TransferTransactionWhereInput): BatchPayload!
    createUser(data: UserCreateInput!): User!
    updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
    updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
    upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
    deleteUser(where: UserWhereUniqueInput!): User
    deleteManyUsers(where: UserWhereInput): BatchPayload!
    createVideo(data: VideoCreateInput!): Video!
    updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
    updateManyVideos(data: VideoUpdateManyMutationInput!, where: VideoWhereInput): BatchPayload!
    upsertVideo(where: VideoWhereUniqueInput!, create: VideoCreateInput!, update: VideoUpdateInput!): Video!
    deleteVideo(where: VideoWhereUniqueInput!): Video
    deleteManyVideos(where: VideoWhereInput): BatchPayload!
    createVideoDataForMonth(data: VideoDataForMonthCreateInput!): VideoDataForMonth!
    updateVideoDataForMonth(data: VideoDataForMonthUpdateInput!, where: VideoDataForMonthWhereUniqueInput!): VideoDataForMonth
    updateManyVideoDataForMonths(data: VideoDataForMonthUpdateManyMutationInput!, where: VideoDataForMonthWhereInput): BatchPayload!
    upsertVideoDataForMonth(where: VideoDataForMonthWhereUniqueInput!, create: VideoDataForMonthCreateInput!, update: VideoDataForMonthUpdateInput!): VideoDataForMonth!
    deleteVideoDataForMonth(where: VideoDataForMonthWhereUniqueInput!): VideoDataForMonth
    deleteManyVideoDataForMonths(where: VideoDataForMonthWhereInput): BatchPayload!
    createVideoParameters(data: VideoParametersCreateInput!): VideoParameters!
    updateVideoParameters(data: VideoParametersUpdateInput!, where: VideoParametersWhereUniqueInput!): VideoParameters
    updateManyVideoParameterses(data: VideoParametersUpdateManyMutationInput!, where: VideoParametersWhereInput): BatchPayload!
    upsertVideoParameters(where: VideoParametersWhereUniqueInput!, create: VideoParametersCreateInput!, update: VideoParametersUpdateInput!): VideoParameters!
    deleteVideoParameters(where: VideoParametersWhereUniqueInput!): VideoParameters
    deleteManyVideoParameterses(where: VideoParametersWhereInput): BatchPayload!
    createVideoParametersForMonth(data: VideoParametersForMonthCreateInput!): VideoParametersForMonth!
    updateVideoParametersForMonth(data: VideoParametersForMonthUpdateInput!, where: VideoParametersForMonthWhereUniqueInput!): VideoParametersForMonth
    updateManyVideoParametersForMonths(data: VideoParametersForMonthUpdateManyMutationInput!, where: VideoParametersForMonthWhereInput): BatchPayload!
    upsertVideoParametersForMonth(where: VideoParametersForMonthWhereUniqueInput!, create: VideoParametersForMonthCreateInput!, update: VideoParametersForMonthUpdateInput!): VideoParametersForMonth!
    deleteVideoParametersForMonth(where: VideoParametersForMonthWhereUniqueInput!): VideoParametersForMonth
    deleteManyVideoParametersForMonths(where: VideoParametersForMonthWhereInput): BatchPayload!
    createVideoTotalParameters(data: VideoTotalParametersCreateInput!): VideoTotalParameters!
    updateVideoTotalParameters(data: VideoTotalParametersUpdateInput!, where: VideoTotalParametersWhereUniqueInput!): VideoTotalParameters
    updateManyVideoTotalParameterses(data: VideoTotalParametersUpdateManyMutationInput!, where: VideoTotalParametersWhereInput): BatchPayload!
    upsertVideoTotalParameters(where: VideoTotalParametersWhereUniqueInput!, create: VideoTotalParametersCreateInput!, update: VideoTotalParametersUpdateInput!): VideoTotalParameters!
    deleteVideoTotalParameters(where: VideoTotalParametersWhereUniqueInput!): VideoTotalParameters
    deleteManyVideoTotalParameterses(where: VideoTotalParametersWhereInput): BatchPayload!
    createWatchedVideoUser(data: WatchedVideoUserCreateInput!): WatchedVideoUser!
    updateWatchedVideoUser(data: WatchedVideoUserUpdateInput!, where: WatchedVideoUserWhereUniqueInput!): WatchedVideoUser
    updateManyWatchedVideoUsers(data: WatchedVideoUserUpdateManyMutationInput!, where: WatchedVideoUserWhereInput): BatchPayload!
    upsertWatchedVideoUser(where: WatchedVideoUserWhereUniqueInput!, create: WatchedVideoUserCreateInput!, update: WatchedVideoUserUpdateInput!): WatchedVideoUser!
    deleteWatchedVideoUser(where: WatchedVideoUserWhereUniqueInput!): WatchedVideoUser
    deleteManyWatchedVideoUsers(where: WatchedVideoUserWhereInput): BatchPayload!
}
