#import * from './helper.graphql'

#import Query from './query.graphql'

#import Mutation from './mutation.graphql'

type SystemInfo {
    appinfo: JSON
    uptime: String
    node_mem_usage: [String]
    platform: String
    os_type: String
    cpu_count: String
    os_total_mem: String
    os_free_mem: String
    user_count: String
    other_info: JSON
}

type UserAuthResponse {
    user: User
    token: String
    status: String
}

enum SignUpStep {
    GENERATE_ACTIVATION_CODE
    CHECK_ACTIVATION_CODE
}

enum RestorePasswordStep {
    GENERATE_RESTORE_CODE
    CHECK_RESTORE_CODE
}

type User {
    subscribed_users_count: Int
    last4: String
}

type Video {
    likes_count: Int
}

enum StripePlan {
    MONTHLY
    YEARLY
}

######################################################################################

# remove passwords (regexp + matchcase): "password*.*\n    "

######################################################################################

type ActivationCode {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    email: String!
    valid_until: DateTime!
    code: String!
}

type ActivationCodeConnection {
    pageInfo: PageInfo!
    edges: [ActivationCodeEdge]!
    aggregate: AggregateActivationCode!
}

input ActivationCodeCreateInput {
    email: String!
    valid_until: DateTime!
    code: String!
}

type ActivationCodeEdge {
    node: ActivationCode!
    cursor: String!
}

enum ActivationCodeOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
    email_ASC
    email_DESC
    valid_until_ASC
    valid_until_DESC
    code_ASC
    code_DESC
}

type ActivationCodePreviousValues {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    email: String!
    valid_until: DateTime!
    code: String!
}

type ActivationCodeSubscriptionPayload {
    mutation: MutationType!
    node: ActivationCode
    updatedFields: [String!]
    previousValues: ActivationCodePreviousValues
}

input ActivationCodeSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: ActivationCodeWhereInput
    AND: [ActivationCodeSubscriptionWhereInput!]
    OR: [ActivationCodeSubscriptionWhereInput!]
    NOT: [ActivationCodeSubscriptionWhereInput!]
}

input ActivationCodeUpdateInput {
    email: String
    valid_until: DateTime
    code: String
}

input ActivationCodeUpdateManyMutationInput {
    email: String
    valid_until: DateTime
    code: String
}

input ActivationCodeWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    email: String
    email_not: String
    email_in: [String!]
    email_not_in: [String!]
    email_lt: String
    email_lte: String
    email_gt: String
    email_gte: String
    email_contains: String
    email_not_contains: String
    email_starts_with: String
    email_not_starts_with: String
    email_ends_with: String
    email_not_ends_with: String
    valid_until: DateTime
    valid_until_not: DateTime
    valid_until_in: [DateTime!]
    valid_until_not_in: [DateTime!]
    valid_until_lt: DateTime
    valid_until_lte: DateTime
    valid_until_gt: DateTime
    valid_until_gte: DateTime
    code: String
    code_not: String
    code_in: [String!]
    code_not_in: [String!]
    code_lt: String
    code_lte: String
    code_gt: String
    code_gte: String
    code_contains: String
    code_not_contains: String
    code_starts_with: String
    code_not_starts_with: String
    code_ends_with: String
    code_not_ends_with: String
    AND: [ActivationCodeWhereInput!]
    OR: [ActivationCodeWhereInput!]
    NOT: [ActivationCodeWhereInput!]
}

input ActivationCodeWhereUniqueInput {
    id: ID
    email: String
}

type AggregateActivationCode {
    count: Int!
}

type AggregateArtistFactors {
  count: Int!
}

type AggregateArtistFactorsSetting {
  count: Int!
}

type AggregateCategory {
    count: Int!
}

type AggregateChargeHistory {
  count: Int!
}

type AggregateCurriculum {
  count: Int!
}

type AggregatePlayHistory {
    count: Int!
}

type AggregatePost {
    count: Int!
}

type AggregateProfitPoolCalculation {
  count: Int!
}

type AggregateProfitPoolFactor {
  count: Int!
}

type AggregateRestoreCode {
    count: Int!
}

type AggregateSettings {
  count: Int!
}

type AggregateSubscriptionHistory {
  count: Int!
}

type AggregateTag {
    count: Int!
}

type AggregateTotalMinutesForArtist {
  count: Int!
}

type AggregateTransferPlan {
  count: Int!
}

type AggregateTransferTransaction {
  count: Int!
}

type AggregateUser {
    count: Int!
}

type AggregateVideo {
    count: Int!
}

type AggregateVideoDataForMonth {
  count: Int!
}

type AggregateVideoParameters {
  count: Int!
}

type AggregateVideoParametersForMonth {
  count: Int!
}

type AggregateVideoTotalParameters {
  count: Int!
}

type AggregateWatchedVideoUser {
  count: Int!
}

type ArtistFactors {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  artist: User!
  promotion_factor: Float!
  minutes_exponent: Float!
  finder_fee_factor: Float!
  monthly_fee_duration: Int!
  monthly_fee_amount_per_month: Int!
  annual_fee_amount_per_month: Int!
}

type ArtistFactorsConnection {
  pageInfo: PageInfo!
  edges: [ArtistFactorsEdge]!
  aggregate: AggregateArtistFactors!
}

input ArtistFactorsCreateInput {
  artist: UserCreateOneInput!
  promotion_factor: Float
  minutes_exponent: Float
  finder_fee_factor: Float
  monthly_fee_duration: Int
  monthly_fee_amount_per_month: Int
  annual_fee_amount_per_month: Int
}

type ArtistFactorsEdge {
  node: ArtistFactors!
  cursor: String!
}

enum ArtistFactorsOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  promotion_factor_ASC
  promotion_factor_DESC
  minutes_exponent_ASC
  minutes_exponent_DESC
  finder_fee_factor_ASC
  finder_fee_factor_DESC
  monthly_fee_duration_ASC
  monthly_fee_duration_DESC
  monthly_fee_amount_per_month_ASC
  monthly_fee_amount_per_month_DESC
  annual_fee_amount_per_month_ASC
  annual_fee_amount_per_month_DESC
}

type ArtistFactorsPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  promotion_factor: Float!
  minutes_exponent: Float!
  finder_fee_factor: Float!
  monthly_fee_duration: Int!
  monthly_fee_amount_per_month: Int!
  annual_fee_amount_per_month: Int!
}

type ArtistFactorsSetting {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  promotion_factor: Float!
  minutes_exponent: Float!
  finder_fee_factor: Float!
  monthly_fee_duration: Int!
  monthly_fee_amount_per_month: Int!
  annual_fee_amount_per_month: Int!
}

type ArtistFactorsSettingConnection {
  pageInfo: PageInfo!
  edges: [ArtistFactorsSettingEdge]!
  aggregate: AggregateArtistFactorsSetting!
}

input ArtistFactorsSettingCreateInput {
  promotion_factor: Float!
  minutes_exponent: Float!
  finder_fee_factor: Float!
  monthly_fee_duration: Int!
  monthly_fee_amount_per_month: Int!
  annual_fee_amount_per_month: Int!
}

type ArtistFactorsSettingEdge {
  node: ArtistFactorsSetting!
  cursor: String!
}

enum ArtistFactorsSettingOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  promotion_factor_ASC
  promotion_factor_DESC
  minutes_exponent_ASC
  minutes_exponent_DESC
  finder_fee_factor_ASC
  finder_fee_factor_DESC
  monthly_fee_duration_ASC
  monthly_fee_duration_DESC
  monthly_fee_amount_per_month_ASC
  monthly_fee_amount_per_month_DESC
  annual_fee_amount_per_month_ASC
  annual_fee_amount_per_month_DESC
}

type ArtistFactorsSettingPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  promotion_factor: Float!
  minutes_exponent: Float!
  finder_fee_factor: Float!
  monthly_fee_duration: Int!
  monthly_fee_amount_per_month: Int!
  annual_fee_amount_per_month: Int!
}

type ArtistFactorsSettingSubscriptionPayload {
  mutation: MutationType!
  node: ArtistFactorsSetting
  updatedFields: [String!]
  previousValues: ArtistFactorsSettingPreviousValues
}

input ArtistFactorsSettingSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ArtistFactorsSettingWhereInput
  AND: [ArtistFactorsSettingSubscriptionWhereInput!]
  OR: [ArtistFactorsSettingSubscriptionWhereInput!]
  NOT: [ArtistFactorsSettingSubscriptionWhereInput!]
}

input ArtistFactorsSettingUpdateInput {
  promotion_factor: Float
  minutes_exponent: Float
  finder_fee_factor: Float
  monthly_fee_duration: Int
  monthly_fee_amount_per_month: Int
  annual_fee_amount_per_month: Int
}

input ArtistFactorsSettingUpdateManyMutationInput {
  promotion_factor: Float
  minutes_exponent: Float
  finder_fee_factor: Float
  monthly_fee_duration: Int
  monthly_fee_amount_per_month: Int
  annual_fee_amount_per_month: Int
}

input ArtistFactorsSettingWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  promotion_factor: Float
  promotion_factor_not: Float
  promotion_factor_in: [Float!]
  promotion_factor_not_in: [Float!]
  promotion_factor_lt: Float
  promotion_factor_lte: Float
  promotion_factor_gt: Float
  promotion_factor_gte: Float
  minutes_exponent: Float
  minutes_exponent_not: Float
  minutes_exponent_in: [Float!]
  minutes_exponent_not_in: [Float!]
  minutes_exponent_lt: Float
  minutes_exponent_lte: Float
  minutes_exponent_gt: Float
  minutes_exponent_gte: Float
  finder_fee_factor: Float
  finder_fee_factor_not: Float
  finder_fee_factor_in: [Float!]
  finder_fee_factor_not_in: [Float!]
  finder_fee_factor_lt: Float
  finder_fee_factor_lte: Float
  finder_fee_factor_gt: Float
  finder_fee_factor_gte: Float
  monthly_fee_duration: Int
  monthly_fee_duration_not: Int
  monthly_fee_duration_in: [Int!]
  monthly_fee_duration_not_in: [Int!]
  monthly_fee_duration_lt: Int
  monthly_fee_duration_lte: Int
  monthly_fee_duration_gt: Int
  monthly_fee_duration_gte: Int
  monthly_fee_amount_per_month: Int
  monthly_fee_amount_per_month_not: Int
  monthly_fee_amount_per_month_in: [Int!]
  monthly_fee_amount_per_month_not_in: [Int!]
  monthly_fee_amount_per_month_lt: Int
  monthly_fee_amount_per_month_lte: Int
  monthly_fee_amount_per_month_gt: Int
  monthly_fee_amount_per_month_gte: Int
  annual_fee_amount_per_month: Int
  annual_fee_amount_per_month_not: Int
  annual_fee_amount_per_month_in: [Int!]
  annual_fee_amount_per_month_not_in: [Int!]
  annual_fee_amount_per_month_lt: Int
  annual_fee_amount_per_month_lte: Int
  annual_fee_amount_per_month_gt: Int
  annual_fee_amount_per_month_gte: Int
  AND: [ArtistFactorsSettingWhereInput!]
  OR: [ArtistFactorsSettingWhereInput!]
  NOT: [ArtistFactorsSettingWhereInput!]
}

input ArtistFactorsSettingWhereUniqueInput {
  id: ID
}

type ArtistFactorsSubscriptionPayload {
  mutation: MutationType!
  node: ArtistFactors
  updatedFields: [String!]
  previousValues: ArtistFactorsPreviousValues
}

input ArtistFactorsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ArtistFactorsWhereInput
  AND: [ArtistFactorsSubscriptionWhereInput!]
  OR: [ArtistFactorsSubscriptionWhereInput!]
  NOT: [ArtistFactorsSubscriptionWhereInput!]
}

input ArtistFactorsUpdateInput {
  artist: UserUpdateOneRequiredInput
  promotion_factor: Float
  minutes_exponent: Float
  finder_fee_factor: Float
  monthly_fee_duration: Int
  monthly_fee_amount_per_month: Int
  annual_fee_amount_per_month: Int
}

input ArtistFactorsUpdateManyMutationInput {
  promotion_factor: Float
  minutes_exponent: Float
  finder_fee_factor: Float
  monthly_fee_duration: Int
  monthly_fee_amount_per_month: Int
  annual_fee_amount_per_month: Int
}

input ArtistFactorsWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  artist: UserWhereInput
  promotion_factor: Float
  promotion_factor_not: Float
  promotion_factor_in: [Float!]
  promotion_factor_not_in: [Float!]
  promotion_factor_lt: Float
  promotion_factor_lte: Float
  promotion_factor_gt: Float
  promotion_factor_gte: Float
  minutes_exponent: Float
  minutes_exponent_not: Float
  minutes_exponent_in: [Float!]
  minutes_exponent_not_in: [Float!]
  minutes_exponent_lt: Float
  minutes_exponent_lte: Float
  minutes_exponent_gt: Float
  minutes_exponent_gte: Float
  finder_fee_factor: Float
  finder_fee_factor_not: Float
  finder_fee_factor_in: [Float!]
  finder_fee_factor_not_in: [Float!]
  finder_fee_factor_lt: Float
  finder_fee_factor_lte: Float
  finder_fee_factor_gt: Float
  finder_fee_factor_gte: Float
  monthly_fee_duration: Int
  monthly_fee_duration_not: Int
  monthly_fee_duration_in: [Int!]
  monthly_fee_duration_not_in: [Int!]
  monthly_fee_duration_lt: Int
  monthly_fee_duration_lte: Int
  monthly_fee_duration_gt: Int
  monthly_fee_duration_gte: Int
  monthly_fee_amount_per_month: Int
  monthly_fee_amount_per_month_not: Int
  monthly_fee_amount_per_month_in: [Int!]
  monthly_fee_amount_per_month_not_in: [Int!]
  monthly_fee_amount_per_month_lt: Int
  monthly_fee_amount_per_month_lte: Int
  monthly_fee_amount_per_month_gt: Int
  monthly_fee_amount_per_month_gte: Int
  annual_fee_amount_per_month: Int
  annual_fee_amount_per_month_not: Int
  annual_fee_amount_per_month_in: [Int!]
  annual_fee_amount_per_month_not_in: [Int!]
  annual_fee_amount_per_month_lt: Int
  annual_fee_amount_per_month_lte: Int
  annual_fee_amount_per_month_gt: Int
  annual_fee_amount_per_month_gte: Int
  AND: [ArtistFactorsWhereInput!]
  OR: [ArtistFactorsWhereInput!]
  NOT: [ArtistFactorsWhereInput!]
}

input ArtistFactorsWhereUniqueInput {
  id: ID
}

type BatchPayload {
    count: Long!
}

type Category {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    title: String!
    description: String
    videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
}

type CategoryConnection {
    pageInfo: PageInfo!
    edges: [CategoryEdge]!
    aggregate: AggregateCategory!
}

input CategoryCreateInput {
    title: String!
    description: String
    videos: VideoCreateManyWithoutCategoriesInput
}

input CategoryCreateManyWithoutVideosInput {
    create: [CategoryCreateWithoutVideosInput!]
    connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateWithoutVideosInput {
    title: String!
    description: String
}

type CategoryEdge {
    node: Category!
    cursor: String!
}

enum CategoryOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
    title_ASC
    title_DESC
    description_ASC
    description_DESC
}

type CategoryPreviousValues {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    title: String!
    description: String
}

input CategoryScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    title: String
    title_not: String
    title_in: [String!]
    title_not_in: [String!]
    title_lt: String
    title_lte: String
    title_gt: String
    title_gte: String
    title_contains: String
    title_not_contains: String
    title_starts_with: String
    title_not_starts_with: String
    title_ends_with: String
    title_not_ends_with: String
    description: String
    description_not: String
    description_in: [String!]
    description_not_in: [String!]
    description_lt: String
    description_lte: String
    description_gt: String
    description_gte: String
    description_contains: String
    description_not_contains: String
    description_starts_with: String
    description_not_starts_with: String
    description_ends_with: String
    description_not_ends_with: String
    AND: [CategoryScalarWhereInput!]
    OR: [CategoryScalarWhereInput!]
    NOT: [CategoryScalarWhereInput!]
}

type CategorySubscriptionPayload {
    mutation: MutationType!
    node: Category
    updatedFields: [String!]
    previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: CategoryWhereInput
    AND: [CategorySubscriptionWhereInput!]
    OR: [CategorySubscriptionWhereInput!]
    NOT: [CategorySubscriptionWhereInput!]
}

input CategoryUpdateInput {
    title: String
    description: String
    videos: VideoUpdateManyWithoutCategoriesInput
}

input CategoryUpdateManyDataInput {
    title: String
    description: String
}

input CategoryUpdateManyMutationInput {
    title: String
    description: String
}

input CategoryUpdateManyWithoutVideosInput {
    create: [CategoryCreateWithoutVideosInput!]
    delete: [CategoryWhereUniqueInput!]
    connect: [CategoryWhereUniqueInput!]
    set: [CategoryWhereUniqueInput!]
    disconnect: [CategoryWhereUniqueInput!]
    update: [CategoryUpdateWithWhereUniqueWithoutVideosInput!]
    upsert: [CategoryUpsertWithWhereUniqueWithoutVideosInput!]
    deleteMany: [CategoryScalarWhereInput!]
    updateMany: [CategoryUpdateManyWithWhereNestedInput!]
}

input CategoryUpdateManyWithWhereNestedInput {
    where: CategoryScalarWhereInput!
    data: CategoryUpdateManyDataInput!
}

input CategoryUpdateWithoutVideosDataInput {
    title: String
    description: String
}

input CategoryUpdateWithWhereUniqueWithoutVideosInput {
    where: CategoryWhereUniqueInput!
    data: CategoryUpdateWithoutVideosDataInput!
}

input CategoryUpsertWithWhereUniqueWithoutVideosInput {
    where: CategoryWhereUniqueInput!
    update: CategoryUpdateWithoutVideosDataInput!
    create: CategoryCreateWithoutVideosInput!
}

input CategoryWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    title: String
    title_not: String
    title_in: [String!]
    title_not_in: [String!]
    title_lt: String
    title_lte: String
    title_gt: String
    title_gte: String
    title_contains: String
    title_not_contains: String
    title_starts_with: String
    title_not_starts_with: String
    title_ends_with: String
    title_not_ends_with: String
    description: String
    description_not: String
    description_in: [String!]
    description_not_in: [String!]
    description_lt: String
    description_lte: String
    description_gt: String
    description_gte: String
    description_contains: String
    description_not_contains: String
    description_starts_with: String
    description_not_starts_with: String
    description_ends_with: String
    description_not_ends_with: String
    videos_every: VideoWhereInput
    videos_some: VideoWhereInput
    videos_none: VideoWhereInput
    AND: [CategoryWhereInput!]
    OR: [CategoryWhereInput!]
    NOT: [CategoryWhereInput!]
}

input CategoryWhereUniqueInput {
    id: ID
}

type ChargeHistory {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  amount: Int!
  chargeDate: DateTime
}

type ChargeHistoryConnection {
  pageInfo: PageInfo!
  edges: [ChargeHistoryEdge]!
  aggregate: AggregateChargeHistory!
}

input ChargeHistoryCreateInput {
  user: UserCreateOneInput!
  amount: Int!
  chargeDate: DateTime
}

type ChargeHistoryEdge {
  node: ChargeHistory!
  cursor: String!
}

enum ChargeHistoryOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  amount_ASC
  amount_DESC
  chargeDate_ASC
  chargeDate_DESC
}

type ChargeHistoryPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  amount: Int!
  chargeDate: DateTime
}

type ChargeHistorySubscriptionPayload {
  mutation: MutationType!
  node: ChargeHistory
  updatedFields: [String!]
  previousValues: ChargeHistoryPreviousValues
}

input ChargeHistorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChargeHistoryWhereInput
  AND: [ChargeHistorySubscriptionWhereInput!]
  OR: [ChargeHistorySubscriptionWhereInput!]
  NOT: [ChargeHistorySubscriptionWhereInput!]
}

input ChargeHistoryUpdateInput {
  user: UserUpdateOneRequiredInput
  amount: Int
  chargeDate: DateTime
}

input ChargeHistoryUpdateManyMutationInput {
  amount: Int
  chargeDate: DateTime
}

input ChargeHistoryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  user: UserWhereInput
  amount: Int
  amount_not: Int
  amount_in: [Int!]
  amount_not_in: [Int!]
  amount_lt: Int
  amount_lte: Int
  amount_gt: Int
  amount_gte: Int
  chargeDate: DateTime
  chargeDate_not: DateTime
  chargeDate_in: [DateTime!]
  chargeDate_not_in: [DateTime!]
  chargeDate_lt: DateTime
  chargeDate_lte: DateTime
  chargeDate_gt: DateTime
  chargeDate_gte: DateTime
  AND: [ChargeHistoryWhereInput!]
  OR: [ChargeHistoryWhereInput!]
  NOT: [ChargeHistoryWhereInput!]
}

input ChargeHistoryWhereUniqueInput {
  id: ID
}

type Curriculum {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  text: String!
  order: Int
  author: User!
}

type CurriculumConnection {
  pageInfo: PageInfo!
  edges: [CurriculumEdge]!
  aggregate: AggregateCurriculum!
}

input CurriculumCreateInput {
  title: String!
  text: String!
  order: Int
  author: UserCreateOneInput!
}

type CurriculumEdge {
  node: Curriculum!
  cursor: String!
}

enum CurriculumOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  title_ASC
  title_DESC
  text_ASC
  text_DESC
  order_ASC
  order_DESC
}

type CurriculumPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  text: String!
  order: Int
}

type CurriculumSubscriptionPayload {
  mutation: MutationType!
  node: Curriculum
  updatedFields: [String!]
  previousValues: CurriculumPreviousValues
}

input CurriculumSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CurriculumWhereInput
  AND: [CurriculumSubscriptionWhereInput!]
  OR: [CurriculumSubscriptionWhereInput!]
  NOT: [CurriculumSubscriptionWhereInput!]
}

input CurriculumUpdateInput {
  title: String
  text: String
  order: Int
  author: UserUpdateOneRequiredInput
}

input CurriculumUpdateManyMutationInput {
  title: String
  text: String
  order: Int
}

input CurriculumWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  author: UserWhereInput
  AND: [CurriculumWhereInput!]
  OR: [CurriculumWhereInput!]
  NOT: [CurriculumWhereInput!]
}

input CurriculumWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Json

scalar Long

enum MutationType {
    CREATED
    UPDATED
    DELETED
}

interface Node {
    id: ID!
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
}

type PlayHistory {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    user: User!
    video: Video!
    playSeconds: Int!
    realPlaySeconds: Int!
}

type PlayHistoryConnection {
    pageInfo: PageInfo!
    edges: [PlayHistoryEdge]!
    aggregate: AggregatePlayHistory!
}

input PlayHistoryCreateInput {
    user: UserCreateOneInput!
    video: VideoCreateOneInput!
    playSeconds: Int!
    realPlaySeconds: Int!
}

type PlayHistoryEdge {
    node: PlayHistory!
    cursor: String!
}

enum PlayHistoryOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
    playSeconds_ASC
    playSeconds_DESC
    realPlaySeconds_ASC
    realPlaySeconds_DESC
}

type PlayHistoryPreviousValues {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    playSeconds: Int!
    realPlaySeconds: Int!
}

type PlayHistorySubscriptionPayload {
    mutation: MutationType!
    node: PlayHistory
    updatedFields: [String!]
    previousValues: PlayHistoryPreviousValues
}

input PlayHistorySubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: PlayHistoryWhereInput
    AND: [PlayHistorySubscriptionWhereInput!]
    OR: [PlayHistorySubscriptionWhereInput!]
    NOT: [PlayHistorySubscriptionWhereInput!]
}

input PlayHistoryUpdateInput {
    user: UserUpdateOneRequiredInput
    video: VideoUpdateOneRequiredInput
    playSeconds: Int
    realPlaySeconds: Int
}

input PlayHistoryUpdateManyMutationInput {
    playSeconds: Int
    realPlaySeconds: Int
}

input PlayHistoryWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    user: UserWhereInput
    video: VideoWhereInput
    playSeconds: Int
    playSeconds_not: Int
    playSeconds_in: [Int!]
    playSeconds_not_in: [Int!]
    playSeconds_lt: Int
    playSeconds_lte: Int
    playSeconds_gt: Int
    playSeconds_gte: Int
    realPlaySeconds: Int
    realPlaySeconds_not: Int
    realPlaySeconds_in: [Int!]
    realPlaySeconds_not_in: [Int!]
    realPlaySeconds_lt: Int
    realPlaySeconds_lte: Int
    realPlaySeconds_gt: Int
    realPlaySeconds_gte: Int
    AND: [PlayHistoryWhereInput!]
    OR: [PlayHistoryWhereInput!]
    NOT: [PlayHistoryWhereInput!]
}

input PlayHistoryWhereUniqueInput {
    id: ID
}

type Post {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    title: String!
    mainImageUrl: String
    text: String!
    author: User!
}

type PostConnection {
    pageInfo: PageInfo!
    edges: [PostEdge]!
    aggregate: AggregatePost!
}

input PostCreateInput {
    title: String!
    mainImageUrl: String
    text: String!
    author: UserCreateOneInput!
}

type PostEdge {
    node: Post!
    cursor: String!
}

enum PostOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
    title_ASC
    title_DESC
    mainImageUrl_ASC
    mainImageUrl_DESC
    text_ASC
    text_DESC
}

type PostPreviousValues {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    title: String!
    mainImageUrl: String
    text: String!
}

type PostSubscriptionPayload {
    mutation: MutationType!
    node: Post
    updatedFields: [String!]
    previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: PostWhereInput
    AND: [PostSubscriptionWhereInput!]
    OR: [PostSubscriptionWhereInput!]
    NOT: [PostSubscriptionWhereInput!]
}

input PostUpdateInput {
    title: String
    mainImageUrl: String
    text: String
    author: UserUpdateOneRequiredInput
}

input PostUpdateManyMutationInput {
    title: String
    mainImageUrl: String
    text: String
}

input PostWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    title: String
    title_not: String
    title_in: [String!]
    title_not_in: [String!]
    title_lt: String
    title_lte: String
    title_gt: String
    title_gte: String
    title_contains: String
    title_not_contains: String
    title_starts_with: String
    title_not_starts_with: String
    title_ends_with: String
    title_not_ends_with: String
    mainImageUrl: String
    mainImageUrl_not: String
    mainImageUrl_in: [String!]
    mainImageUrl_not_in: [String!]
    mainImageUrl_lt: String
    mainImageUrl_lte: String
    mainImageUrl_gt: String
    mainImageUrl_gte: String
    mainImageUrl_contains: String
    mainImageUrl_not_contains: String
    mainImageUrl_starts_with: String
    mainImageUrl_not_starts_with: String
    mainImageUrl_ends_with: String
    mainImageUrl_not_ends_with: String
    text: String
    text_not: String
    text_in: [String!]
    text_not_in: [String!]
    text_lt: String
    text_lte: String
    text_gt: String
    text_gte: String
    text_contains: String
    text_not_contains: String
    text_starts_with: String
    text_not_starts_with: String
    text_ends_with: String
    text_not_ends_with: String
    author: UserWhereInput
    AND: [PostWhereInput!]
    OR: [PostWhereInput!]
    NOT: [PostWhereInput!]
}

input PostWhereUniqueInput {
    id: ID
}

type ProfitPoolCalculation {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  annual_active_subscribers: Int!
  monthly_active_subscribers: Int!
  annual_subscription_rate: Int
  monthly_subscription_rate: Int
  annual_pool_revenue: Int!
  monthly_pool_revenue: Int!
  total_revenue: Int!
  total_payment_to_artists: Float!
  net_revenue: Float!
}

type ProfitPoolCalculationConnection {
  pageInfo: PageInfo!
  edges: [ProfitPoolCalculationEdge]!
  aggregate: AggregateProfitPoolCalculation!
}

input ProfitPoolCalculationCreateInput {
  year: Int!
  month: Int!
  annual_active_subscribers: Int
  monthly_active_subscribers: Int
  annual_subscription_rate: Int
  monthly_subscription_rate: Int
  annual_pool_revenue: Int
  monthly_pool_revenue: Int
  total_revenue: Int
  total_payment_to_artists: Float
  net_revenue: Float
}

type ProfitPoolCalculationEdge {
  node: ProfitPoolCalculation!
  cursor: String!
}

enum ProfitPoolCalculationOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  year_ASC
  year_DESC
  month_ASC
  month_DESC
  annual_active_subscribers_ASC
  annual_active_subscribers_DESC
  monthly_active_subscribers_ASC
  monthly_active_subscribers_DESC
  annual_subscription_rate_ASC
  annual_subscription_rate_DESC
  monthly_subscription_rate_ASC
  monthly_subscription_rate_DESC
  annual_pool_revenue_ASC
  annual_pool_revenue_DESC
  monthly_pool_revenue_ASC
  monthly_pool_revenue_DESC
  total_revenue_ASC
  total_revenue_DESC
  total_payment_to_artists_ASC
  total_payment_to_artists_DESC
  net_revenue_ASC
  net_revenue_DESC
}

type ProfitPoolCalculationPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  annual_active_subscribers: Int!
  monthly_active_subscribers: Int!
  annual_subscription_rate: Int
  monthly_subscription_rate: Int
  annual_pool_revenue: Int!
  monthly_pool_revenue: Int!
  total_revenue: Int!
  total_payment_to_artists: Float!
  net_revenue: Float!
}

type ProfitPoolCalculationSubscriptionPayload {
  mutation: MutationType!
  node: ProfitPoolCalculation
  updatedFields: [String!]
  previousValues: ProfitPoolCalculationPreviousValues
}

input ProfitPoolCalculationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProfitPoolCalculationWhereInput
  AND: [ProfitPoolCalculationSubscriptionWhereInput!]
  OR: [ProfitPoolCalculationSubscriptionWhereInput!]
  NOT: [ProfitPoolCalculationSubscriptionWhereInput!]
}

input ProfitPoolCalculationUpdateInput {
  year: Int
  month: Int
  annual_active_subscribers: Int
  monthly_active_subscribers: Int
  annual_subscription_rate: Int
  monthly_subscription_rate: Int
  annual_pool_revenue: Int
  monthly_pool_revenue: Int
  total_revenue: Int
  total_payment_to_artists: Float
  net_revenue: Float
}

input ProfitPoolCalculationUpdateManyMutationInput {
  year: Int
  month: Int
  annual_active_subscribers: Int
  monthly_active_subscribers: Int
  annual_subscription_rate: Int
  monthly_subscription_rate: Int
  annual_pool_revenue: Int
  monthly_pool_revenue: Int
  total_revenue: Int
  total_payment_to_artists: Float
  net_revenue: Float
}

input ProfitPoolCalculationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  annual_active_subscribers: Int
  annual_active_subscribers_not: Int
  annual_active_subscribers_in: [Int!]
  annual_active_subscribers_not_in: [Int!]
  annual_active_subscribers_lt: Int
  annual_active_subscribers_lte: Int
  annual_active_subscribers_gt: Int
  annual_active_subscribers_gte: Int
  monthly_active_subscribers: Int
  monthly_active_subscribers_not: Int
  monthly_active_subscribers_in: [Int!]
  monthly_active_subscribers_not_in: [Int!]
  monthly_active_subscribers_lt: Int
  monthly_active_subscribers_lte: Int
  monthly_active_subscribers_gt: Int
  monthly_active_subscribers_gte: Int
  annual_subscription_rate: Int
  annual_subscription_rate_not: Int
  annual_subscription_rate_in: [Int!]
  annual_subscription_rate_not_in: [Int!]
  annual_subscription_rate_lt: Int
  annual_subscription_rate_lte: Int
  annual_subscription_rate_gt: Int
  annual_subscription_rate_gte: Int
  monthly_subscription_rate: Int
  monthly_subscription_rate_not: Int
  monthly_subscription_rate_in: [Int!]
  monthly_subscription_rate_not_in: [Int!]
  monthly_subscription_rate_lt: Int
  monthly_subscription_rate_lte: Int
  monthly_subscription_rate_gt: Int
  monthly_subscription_rate_gte: Int
  annual_pool_revenue: Int
  annual_pool_revenue_not: Int
  annual_pool_revenue_in: [Int!]
  annual_pool_revenue_not_in: [Int!]
  annual_pool_revenue_lt: Int
  annual_pool_revenue_lte: Int
  annual_pool_revenue_gt: Int
  annual_pool_revenue_gte: Int
  monthly_pool_revenue: Int
  monthly_pool_revenue_not: Int
  monthly_pool_revenue_in: [Int!]
  monthly_pool_revenue_not_in: [Int!]
  monthly_pool_revenue_lt: Int
  monthly_pool_revenue_lte: Int
  monthly_pool_revenue_gt: Int
  monthly_pool_revenue_gte: Int
  total_revenue: Int
  total_revenue_not: Int
  total_revenue_in: [Int!]
  total_revenue_not_in: [Int!]
  total_revenue_lt: Int
  total_revenue_lte: Int
  total_revenue_gt: Int
  total_revenue_gte: Int
  total_payment_to_artists: Float
  total_payment_to_artists_not: Float
  total_payment_to_artists_in: [Float!]
  total_payment_to_artists_not_in: [Float!]
  total_payment_to_artists_lt: Float
  total_payment_to_artists_lte: Float
  total_payment_to_artists_gt: Float
  total_payment_to_artists_gte: Float
  net_revenue: Float
  net_revenue_not: Float
  net_revenue_in: [Float!]
  net_revenue_not_in: [Float!]
  net_revenue_lt: Float
  net_revenue_lte: Float
  net_revenue_gt: Float
  net_revenue_gte: Float
  AND: [ProfitPoolCalculationWhereInput!]
  OR: [ProfitPoolCalculationWhereInput!]
  NOT: [ProfitPoolCalculationWhereInput!]
}

input ProfitPoolCalculationWhereUniqueInput {
  id: ID
}

type ProfitPoolFactor {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  overhead: Int!
  monthly_multiplier: Float!
  finder_fee_multiplier: Float!
  profit_pool_option1_variable: Int!
  profit_pool_option1_multiplier: Float!
  profit_pool_option2_variable: Int!
  profit_pool_option2_multiplier: Float!
  profit_pool_percentage: Int!
  manual_change: Int!
}

type ProfitPoolFactorConnection {
  pageInfo: PageInfo!
  edges: [ProfitPoolFactorEdge]!
  aggregate: AggregateProfitPoolFactor!
}

input ProfitPoolFactorCreateInput {
  overhead: Int
  monthly_multiplier: Float
  finder_fee_multiplier: Float
  profit_pool_option1_variable: Int
  profit_pool_option1_multiplier: Float
  profit_pool_option2_variable: Int
  profit_pool_option2_multiplier: Float
  profit_pool_percentage: Int
  manual_change: Int
}

type ProfitPoolFactorEdge {
  node: ProfitPoolFactor!
  cursor: String!
}

enum ProfitPoolFactorOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  overhead_ASC
  overhead_DESC
  monthly_multiplier_ASC
  monthly_multiplier_DESC
  finder_fee_multiplier_ASC
  finder_fee_multiplier_DESC
  profit_pool_option1_variable_ASC
  profit_pool_option1_variable_DESC
  profit_pool_option1_multiplier_ASC
  profit_pool_option1_multiplier_DESC
  profit_pool_option2_variable_ASC
  profit_pool_option2_variable_DESC
  profit_pool_option2_multiplier_ASC
  profit_pool_option2_multiplier_DESC
  profit_pool_percentage_ASC
  profit_pool_percentage_DESC
  manual_change_ASC
  manual_change_DESC
}

type ProfitPoolFactorPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  overhead: Int!
  monthly_multiplier: Float!
  finder_fee_multiplier: Float!
  profit_pool_option1_variable: Int!
  profit_pool_option1_multiplier: Float!
  profit_pool_option2_variable: Int!
  profit_pool_option2_multiplier: Float!
  profit_pool_percentage: Int!
  manual_change: Int!
}

type ProfitPoolFactorSubscriptionPayload {
  mutation: MutationType!
  node: ProfitPoolFactor
  updatedFields: [String!]
  previousValues: ProfitPoolFactorPreviousValues
}

input ProfitPoolFactorSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProfitPoolFactorWhereInput
  AND: [ProfitPoolFactorSubscriptionWhereInput!]
  OR: [ProfitPoolFactorSubscriptionWhereInput!]
  NOT: [ProfitPoolFactorSubscriptionWhereInput!]
}

input ProfitPoolFactorUpdateInput {
  overhead: Int
  monthly_multiplier: Float
  finder_fee_multiplier: Float
  profit_pool_option1_variable: Int
  profit_pool_option1_multiplier: Float
  profit_pool_option2_variable: Int
  profit_pool_option2_multiplier: Float
  profit_pool_percentage: Int
  manual_change: Int
}

input ProfitPoolFactorUpdateManyMutationInput {
  overhead: Int
  monthly_multiplier: Float
  finder_fee_multiplier: Float
  profit_pool_option1_variable: Int
  profit_pool_option1_multiplier: Float
  profit_pool_option2_variable: Int
  profit_pool_option2_multiplier: Float
  profit_pool_percentage: Int
  manual_change: Int
}

input ProfitPoolFactorWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  overhead: Int
  overhead_not: Int
  overhead_in: [Int!]
  overhead_not_in: [Int!]
  overhead_lt: Int
  overhead_lte: Int
  overhead_gt: Int
  overhead_gte: Int
  monthly_multiplier: Float
  monthly_multiplier_not: Float
  monthly_multiplier_in: [Float!]
  monthly_multiplier_not_in: [Float!]
  monthly_multiplier_lt: Float
  monthly_multiplier_lte: Float
  monthly_multiplier_gt: Float
  monthly_multiplier_gte: Float
  finder_fee_multiplier: Float
  finder_fee_multiplier_not: Float
  finder_fee_multiplier_in: [Float!]
  finder_fee_multiplier_not_in: [Float!]
  finder_fee_multiplier_lt: Float
  finder_fee_multiplier_lte: Float
  finder_fee_multiplier_gt: Float
  finder_fee_multiplier_gte: Float
  profit_pool_option1_variable: Int
  profit_pool_option1_variable_not: Int
  profit_pool_option1_variable_in: [Int!]
  profit_pool_option1_variable_not_in: [Int!]
  profit_pool_option1_variable_lt: Int
  profit_pool_option1_variable_lte: Int
  profit_pool_option1_variable_gt: Int
  profit_pool_option1_variable_gte: Int
  profit_pool_option1_multiplier: Float
  profit_pool_option1_multiplier_not: Float
  profit_pool_option1_multiplier_in: [Float!]
  profit_pool_option1_multiplier_not_in: [Float!]
  profit_pool_option1_multiplier_lt: Float
  profit_pool_option1_multiplier_lte: Float
  profit_pool_option1_multiplier_gt: Float
  profit_pool_option1_multiplier_gte: Float
  profit_pool_option2_variable: Int
  profit_pool_option2_variable_not: Int
  profit_pool_option2_variable_in: [Int!]
  profit_pool_option2_variable_not_in: [Int!]
  profit_pool_option2_variable_lt: Int
  profit_pool_option2_variable_lte: Int
  profit_pool_option2_variable_gt: Int
  profit_pool_option2_variable_gte: Int
  profit_pool_option2_multiplier: Float
  profit_pool_option2_multiplier_not: Float
  profit_pool_option2_multiplier_in: [Float!]
  profit_pool_option2_multiplier_not_in: [Float!]
  profit_pool_option2_multiplier_lt: Float
  profit_pool_option2_multiplier_lte: Float
  profit_pool_option2_multiplier_gt: Float
  profit_pool_option2_multiplier_gte: Float
  profit_pool_percentage: Int
  profit_pool_percentage_not: Int
  profit_pool_percentage_in: [Int!]
  profit_pool_percentage_not_in: [Int!]
  profit_pool_percentage_lt: Int
  profit_pool_percentage_lte: Int
  profit_pool_percentage_gt: Int
  profit_pool_percentage_gte: Int
  manual_change: Int
  manual_change_not: Int
  manual_change_in: [Int!]
  manual_change_not_in: [Int!]
  manual_change_lt: Int
  manual_change_lte: Int
  manual_change_gt: Int
  manual_change_gte: Int
  AND: [ProfitPoolFactorWhereInput!]
  OR: [ProfitPoolFactorWhereInput!]
  NOT: [ProfitPoolFactorWhereInput!]
}

input ProfitPoolFactorWhereUniqueInput {
  id: ID
}

type RestoreCode {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    email: String!
    valid_until: DateTime!
    code: String!
}

type RestoreCodeConnection {
    pageInfo: PageInfo!
    edges: [RestoreCodeEdge]!
    aggregate: AggregateRestoreCode!
}

input RestoreCodeCreateInput {
    email: String!
    valid_until: DateTime!
    code: String!
}

type RestoreCodeEdge {
    node: RestoreCode!
    cursor: String!
}

enum RestoreCodeOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
    email_ASC
    email_DESC
    valid_until_ASC
    valid_until_DESC
    code_ASC
    code_DESC
}

type RestoreCodePreviousValues {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    email: String!
    valid_until: DateTime!
    code: String!
}

type RestoreCodeSubscriptionPayload {
    mutation: MutationType!
    node: RestoreCode
    updatedFields: [String!]
    previousValues: RestoreCodePreviousValues
}

input RestoreCodeSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: RestoreCodeWhereInput
    AND: [RestoreCodeSubscriptionWhereInput!]
    OR: [RestoreCodeSubscriptionWhereInput!]
    NOT: [RestoreCodeSubscriptionWhereInput!]
}

input RestoreCodeUpdateInput {
    email: String
    valid_until: DateTime
    code: String
}

input RestoreCodeUpdateManyMutationInput {
    email: String
    valid_until: DateTime
    code: String
}

input RestoreCodeWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    email: String
    email_not: String
    email_in: [String!]
    email_not_in: [String!]
    email_lt: String
    email_lte: String
    email_gt: String
    email_gte: String
    email_contains: String
    email_not_contains: String
    email_starts_with: String
    email_not_starts_with: String
    email_ends_with: String
    email_not_ends_with: String
    valid_until: DateTime
    valid_until_not: DateTime
    valid_until_in: [DateTime!]
    valid_until_not_in: [DateTime!]
    valid_until_lt: DateTime
    valid_until_lte: DateTime
    valid_until_gt: DateTime
    valid_until_gte: DateTime
    code: String
    code_not: String
    code_in: [String!]
    code_not_in: [String!]
    code_lt: String
    code_lte: String
    code_gt: String
    code_gte: String
    code_contains: String
    code_not_contains: String
    code_starts_with: String
    code_not_starts_with: String
    code_ends_with: String
    code_not_ends_with: String
    AND: [RestoreCodeWhereInput!]
    OR: [RestoreCodeWhereInput!]
    NOT: [RestoreCodeWhereInput!]
}

input RestoreCodeWhereUniqueInput {
    id: ID
    email: String
}

type Settings {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  int_val: Int
  str_val: String
}

type SettingsConnection {
  pageInfo: PageInfo!
  edges: [SettingsEdge]!
  aggregate: AggregateSettings!
}

input SettingsCreateInput {
  name: String!
  int_val: Int
  str_val: String
}

type SettingsEdge {
  node: Settings!
  cursor: String!
}

enum SettingsOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  int_val_ASC
  int_val_DESC
  str_val_ASC
  str_val_DESC
}

type SettingsPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  int_val: Int
  str_val: String
}

type SettingsSubscriptionPayload {
  mutation: MutationType!
  node: Settings
  updatedFields: [String!]
  previousValues: SettingsPreviousValues
}

input SettingsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SettingsWhereInput
  AND: [SettingsSubscriptionWhereInput!]
  OR: [SettingsSubscriptionWhereInput!]
  NOT: [SettingsSubscriptionWhereInput!]
}

input SettingsUpdateInput {
  name: String
  int_val: Int
  str_val: String
}

input SettingsUpdateManyMutationInput {
  name: String
  int_val: Int
  str_val: String
}

input SettingsWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  int_val: Int
  int_val_not: Int
  int_val_in: [Int!]
  int_val_not_in: [Int!]
  int_val_lt: Int
  int_val_lte: Int
  int_val_gt: Int
  int_val_gte: Int
  str_val: String
  str_val_not: String
  str_val_in: [String!]
  str_val_not_in: [String!]
  str_val_lt: String
  str_val_lte: String
  str_val_gt: String
  str_val_gte: String
  str_val_contains: String
  str_val_not_contains: String
  str_val_starts_with: String
  str_val_not_starts_with: String
  str_val_ends_with: String
  str_val_not_ends_with: String
  AND: [SettingsWhereInput!]
  OR: [SettingsWhereInput!]
  NOT: [SettingsWhereInput!]
}

input SettingsWhereUniqueInput {
  id: ID
  name: String
}

type Subscription {
  activationCode(where: ActivationCodeSubscriptionWhereInput): ActivationCodeSubscriptionPayload
  artistFactors(where: ArtistFactorsSubscriptionWhereInput): ArtistFactorsSubscriptionPayload
  artistFactorsSetting(where: ArtistFactorsSettingSubscriptionWhereInput): ArtistFactorsSettingSubscriptionPayload
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  chargeHistory(where: ChargeHistorySubscriptionWhereInput): ChargeHistorySubscriptionPayload
  curriculum(where: CurriculumSubscriptionWhereInput): CurriculumSubscriptionPayload
  playHistory(where: PlayHistorySubscriptionWhereInput): PlayHistorySubscriptionPayload
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  profitPoolCalculation(where: ProfitPoolCalculationSubscriptionWhereInput): ProfitPoolCalculationSubscriptionPayload
  profitPoolFactor(where: ProfitPoolFactorSubscriptionWhereInput): ProfitPoolFactorSubscriptionPayload
  restoreCode(where: RestoreCodeSubscriptionWhereInput): RestoreCodeSubscriptionPayload
  settings(where: SettingsSubscriptionWhereInput): SettingsSubscriptionPayload
  subscriptionHistory(where: SubscriptionHistorySubscriptionWhereInput): SubscriptionHistorySubscriptionPayload
  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload
  totalMinutesForArtist(where: TotalMinutesForArtistSubscriptionWhereInput): TotalMinutesForArtistSubscriptionPayload
  transferPlan(where: TransferPlanSubscriptionWhereInput): TransferPlanSubscriptionPayload
  transferTransaction(where: TransferTransactionSubscriptionWhereInput): TransferTransactionSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  video(where: VideoSubscriptionWhereInput): VideoSubscriptionPayload
  videoDataForMonth(where: VideoDataForMonthSubscriptionWhereInput): VideoDataForMonthSubscriptionPayload
  videoParameters(where: VideoParametersSubscriptionWhereInput): VideoParametersSubscriptionPayload
  videoParametersForMonth(where: VideoParametersForMonthSubscriptionWhereInput): VideoParametersForMonthSubscriptionPayload
  videoTotalParameters(where: VideoTotalParametersSubscriptionWhereInput): VideoTotalParametersSubscriptionPayload
  watchedVideoUser(where: WatchedVideoUserSubscriptionWhereInput): WatchedVideoUserSubscriptionPayload
}

type SubscriptionHistory {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  interval: String!
  amount: Int!
  subscriptionDate: DateTime
}

type SubscriptionHistoryConnection {
  pageInfo: PageInfo!
  edges: [SubscriptionHistoryEdge]!
  aggregate: AggregateSubscriptionHistory!
}

input SubscriptionHistoryCreateInput {
  user: UserCreateOneInput!
  interval: String!
  amount: Int!
  subscriptionDate: DateTime
}

type SubscriptionHistoryEdge {
  node: SubscriptionHistory!
  cursor: String!
}

enum SubscriptionHistoryOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  interval_ASC
  interval_DESC
  amount_ASC
  amount_DESC
  subscriptionDate_ASC
  subscriptionDate_DESC
}

type SubscriptionHistoryPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  interval: String!
  amount: Int!
  subscriptionDate: DateTime
}

type SubscriptionHistorySubscriptionPayload {
  mutation: MutationType!
  node: SubscriptionHistory
  updatedFields: [String!]
  previousValues: SubscriptionHistoryPreviousValues
}

input SubscriptionHistorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SubscriptionHistoryWhereInput
  AND: [SubscriptionHistorySubscriptionWhereInput!]
  OR: [SubscriptionHistorySubscriptionWhereInput!]
  NOT: [SubscriptionHistorySubscriptionWhereInput!]
}

input SubscriptionHistoryUpdateInput {
  user: UserUpdateOneRequiredInput
  interval: String!
  amount: Int!
  subscriptionDate: DateTime
}

input SubscriptionHistoryUpdateManyMutationInput {
  interval: String!
  amount: Int!
  subscriptionDate: DateTime
}

input SubscriptionHistoryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  user: UserWhereInput
  interval: String
  interval_not: String
  interval_in: [String!]
  interval_not_in: [String!]
  interval_lt: String
  interval_lte: String
  interval_gt: String
  interval_gte: String
  interval_contains: String
  interval_not_contains: String
  interval_starts_with: String
  interval_not_starts_with: String
  interval_ends_with: String
  interval_not_ends_with: String
  amount: Int
  amount_not: Int
  amount_in: [Int!]
  amount_not_in: [Int!]
  amount_lt: Int
  amount_lte: Int
  amount_gt: Int
  amount_gte: Int
  AND: [SubscriptionHistoryWhereInput!]
  OR: [SubscriptionHistoryWhereInput!]
  NOT: [SubscriptionHistoryWhereInput!]
}

input SubscriptionHistoryWhereUniqueInput {
  id: ID
}

type Tag {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    text: String!
    videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
}

type TagConnection {
    pageInfo: PageInfo!
    edges: [TagEdge]!
    aggregate: AggregateTag!
}

input TagCreateInput {
    text: String!
    videos: VideoCreateManyWithoutTagsInput
}

input TagCreateManyWithoutVideosInput {
    create: [TagCreateWithoutVideosInput!]
    connect: [TagWhereUniqueInput!]
}

input TagCreateWithoutVideosInput {
    text: String!
}

type TagEdge {
    node: Tag!
    cursor: String!
}

enum TagOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
    text_ASC
    text_DESC
}

type TagPreviousValues {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    text: String!
}

input TagScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    text: String
    text_not: String
    text_in: [String!]
    text_not_in: [String!]
    text_lt: String
    text_lte: String
    text_gt: String
    text_gte: String
    text_contains: String
    text_not_contains: String
    text_starts_with: String
    text_not_starts_with: String
    text_ends_with: String
    text_not_ends_with: String
    AND: [TagScalarWhereInput!]
    OR: [TagScalarWhereInput!]
    NOT: [TagScalarWhereInput!]
}

type TagSubscriptionPayload {
    mutation: MutationType!
    node: Tag
    updatedFields: [String!]
    previousValues: TagPreviousValues
}

input TagSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: TagWhereInput
    AND: [TagSubscriptionWhereInput!]
    OR: [TagSubscriptionWhereInput!]
    NOT: [TagSubscriptionWhereInput!]
}

input TagUpdateInput {
    text: String
    videos: VideoUpdateManyWithoutTagsInput
}

input TagUpdateManyDataInput {
    text: String
}

input TagUpdateManyMutationInput {
    text: String
}

input TagUpdateManyWithoutVideosInput {
    create: [TagCreateWithoutVideosInput!]
    delete: [TagWhereUniqueInput!]
    connect: [TagWhereUniqueInput!]
    set: [TagWhereUniqueInput!]
    disconnect: [TagWhereUniqueInput!]
    update: [TagUpdateWithWhereUniqueWithoutVideosInput!]
    upsert: [TagUpsertWithWhereUniqueWithoutVideosInput!]
    deleteMany: [TagScalarWhereInput!]
    updateMany: [TagUpdateManyWithWhereNestedInput!]
}

input TagUpdateManyWithWhereNestedInput {
    where: TagScalarWhereInput!
    data: TagUpdateManyDataInput!
}

input TagUpdateWithoutVideosDataInput {
    text: String
}

input TagUpdateWithWhereUniqueWithoutVideosInput {
    where: TagWhereUniqueInput!
    data: TagUpdateWithoutVideosDataInput!
}

input TagUpsertWithWhereUniqueWithoutVideosInput {
    where: TagWhereUniqueInput!
    update: TagUpdateWithoutVideosDataInput!
    create: TagCreateWithoutVideosInput!
}

input TagWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    text: String
    text_not: String
    text_in: [String!]
    text_not_in: [String!]
    text_lt: String
    text_lte: String
    text_gt: String
    text_gte: String
    text_contains: String
    text_not_contains: String
    text_starts_with: String
    text_not_starts_with: String
    text_ends_with: String
    text_not_ends_with: String
    videos_every: VideoWhereInput
    videos_some: VideoWhereInput
    videos_none: VideoWhereInput
    AND: [TagWhereInput!]
    OR: [TagWhereInput!]
    NOT: [TagWhereInput!]
}

input TagWhereUniqueInput {
    id: ID
}

type TotalMinutesForArtist {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  artist: User!
  minutes_as_owner1: Float!
  minutes_as_owner2: Float!
  minutes_as_owner3: Float!
  total_minutes: Float!
  artist_rating_factor: Float!
  final_minutes: Float!
  percent_of_profit_pool: Float!
  monthly_quantity: Int!
  annual_quantity: Int!
  finder_fee: Int!
  payment_from_profit_pool: Float!
  total_payment: Float!
}

type TotalMinutesForArtistConnection {
  pageInfo: PageInfo!
  edges: [TotalMinutesForArtistEdge]!
  aggregate: AggregateTotalMinutesForArtist!
}

input TotalMinutesForArtistCreateInput {
  year: Int!
  month: Int!
  artist: UserCreateOneInput!
  minutes_as_owner1: Float
  minutes_as_owner2: Float
  minutes_as_owner3: Float
  total_minutes: Float
  artist_rating_factor: Float!
  final_minutes: Float
  percent_of_profit_pool: Float
  monthly_quantity: Int!
  annual_quantity: Int!
  finder_fee: Int
  payment_from_profit_pool: Float
  total_payment: Float
}

type TotalMinutesForArtistEdge {
  node: TotalMinutesForArtist!
  cursor: String!
}

enum TotalMinutesForArtistOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  year_ASC
  year_DESC
  month_ASC
  month_DESC
  minutes_as_owner1_ASC
  minutes_as_owner1_DESC
  minutes_as_owner2_ASC
  minutes_as_owner2_DESC
  minutes_as_owner3_ASC
  minutes_as_owner3_DESC
  total_minutes_ASC
  total_minutes_DESC
  artist_rating_factor_ASC
  artist_rating_factor_DESC
  final_minutes_ASC
  final_minutes_DESC
  percent_of_profit_pool_ASC
  percent_of_profit_pool_DESC
  monthly_quantity_ASC
  monthly_quantity_DESC
  annual_quantity_ASC
  annual_quantity_DESC
  finder_fee_ASC
  finder_fee_DESC
  payment_from_profit_pool_ASC
  payment_from_profit_pool_DESC
  total_payment_ASC
  total_payment_DESC
}

type TotalMinutesForArtistPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  minutes_as_owner1: Float!
  minutes_as_owner2: Float!
  minutes_as_owner3: Float!
  total_minutes: Float!
  artist_rating_factor: Float!
  final_minutes: Float!
  percent_of_profit_pool: Float!
  monthly_quantity: Int!
  annual_quantity: Int!
  finder_fee: Int!
  payment_from_profit_pool: Float!
  total_payment: Float!
}

type TotalMinutesForArtistSubscriptionPayload {
  mutation: MutationType!
  node: TotalMinutesForArtist
  updatedFields: [String!]
  previousValues: TotalMinutesForArtistPreviousValues
}

input TotalMinutesForArtistSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TotalMinutesForArtistWhereInput
  AND: [TotalMinutesForArtistSubscriptionWhereInput!]
  OR: [TotalMinutesForArtistSubscriptionWhereInput!]
  NOT: [TotalMinutesForArtistSubscriptionWhereInput!]
}

input TotalMinutesForArtistUpdateInput {
  year: Int
  month: Int
  artist: UserUpdateOneRequiredInput
  minutes_as_owner1: Float
  minutes_as_owner2: Float
  minutes_as_owner3: Float
  total_minutes: Float
  artist_rating_factor: Float
  final_minutes: Float
  percent_of_profit_pool: Float
  monthly_quantity: Int
  annual_quantity: Int
  finder_fee: Int
  payment_from_profit_pool: Float
  total_payment: Float
}

input TotalMinutesForArtistUpdateManyMutationInput {
  year: Int
  month: Int
  minutes_as_owner1: Float
  minutes_as_owner2: Float
  minutes_as_owner3: Float
  total_minutes: Float
  artist_rating_factor: Float
  final_minutes: Float
  percent_of_profit_pool: Float
  monthly_quantity: Int
  annual_quantity: Int
  finder_fee: Int
  payment_from_profit_pool: Float
  total_payment: Float
}

input TotalMinutesForArtistWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  artist: UserWhereInput
  minutes_as_owner1: Float
  minutes_as_owner1_not: Float
  minutes_as_owner1_in: [Float!]
  minutes_as_owner1_not_in: [Float!]
  minutes_as_owner1_lt: Float
  minutes_as_owner1_lte: Float
  minutes_as_owner1_gt: Float
  minutes_as_owner1_gte: Float
  minutes_as_owner2: Float
  minutes_as_owner2_not: Float
  minutes_as_owner2_in: [Float!]
  minutes_as_owner2_not_in: [Float!]
  minutes_as_owner2_lt: Float
  minutes_as_owner2_lte: Float
  minutes_as_owner2_gt: Float
  minutes_as_owner2_gte: Float
  minutes_as_owner3: Float
  minutes_as_owner3_not: Float
  minutes_as_owner3_in: [Float!]
  minutes_as_owner3_not_in: [Float!]
  minutes_as_owner3_lt: Float
  minutes_as_owner3_lte: Float
  minutes_as_owner3_gt: Float
  minutes_as_owner3_gte: Float
  total_minutes: Float
  total_minutes_not: Float
  total_minutes_in: [Float!]
  total_minutes_not_in: [Float!]
  total_minutes_lt: Float
  total_minutes_lte: Float
  total_minutes_gt: Float
  total_minutes_gte: Float
  artist_rating_factor: Float
  artist_rating_factor_not: Float
  artist_rating_factor_in: [Float!]
  artist_rating_factor_not_in: [Float!]
  artist_rating_factor_lt: Float
  artist_rating_factor_lte: Float
  artist_rating_factor_gt: Float
  artist_rating_factor_gte: Float
  final_minutes: Float
  final_minutes_not: Float
  final_minutes_in: [Float!]
  final_minutes_not_in: [Float!]
  final_minutes_lt: Float
  final_minutes_lte: Float
  final_minutes_gt: Float
  final_minutes_gte: Float
  percent_of_profit_pool: Float
  percent_of_profit_pool_not: Float
  percent_of_profit_pool_in: [Float!]
  percent_of_profit_pool_not_in: [Float!]
  percent_of_profit_pool_lt: Float
  percent_of_profit_pool_lte: Float
  percent_of_profit_pool_gt: Float
  percent_of_profit_pool_gte: Float
  monthly_quantity: Int
  monthly_quantity_not: Int
  monthly_quantity_in: [Int!]
  monthly_quantity_not_in: [Int!]
  monthly_quantity_lt: Int
  monthly_quantity_lte: Int
  monthly_quantity_gt: Int
  monthly_quantity_gte: Int
  annual_quantity: Int
  annual_quantity_not: Int
  annual_quantity_in: [Int!]
  annual_quantity_not_in: [Int!]
  annual_quantity_lt: Int
  annual_quantity_lte: Int
  annual_quantity_gt: Int
  annual_quantity_gte: Int
  finder_fee: Int
  finder_fee_not: Int
  finder_fee_in: [Int!]
  finder_fee_not_in: [Int!]
  finder_fee_lt: Int
  finder_fee_lte: Int
  finder_fee_gt: Int
  finder_fee_gte: Int
  payment_from_profit_pool: Float
  payment_from_profit_pool_not: Float
  payment_from_profit_pool_in: [Float!]
  payment_from_profit_pool_not_in: [Float!]
  payment_from_profit_pool_lt: Float
  payment_from_profit_pool_lte: Float
  payment_from_profit_pool_gt: Float
  payment_from_profit_pool_gte: Float
  total_payment: Float
  total_payment_not: Float
  total_payment_in: [Float!]
  total_payment_not_in: [Float!]
  total_payment_lt: Float
  total_payment_lte: Float
  total_payment_gt: Float
  total_payment_gte: Float
  AND: [TotalMinutesForArtistWhereInput!]
  OR: [TotalMinutesForArtistWhereInput!]
  NOT: [TotalMinutesForArtistWhereInput!]
}

input TotalMinutesForArtistWhereUniqueInput {
  id: ID
}

type TransferPlan {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  artist: User!
  subscriber: User!
  year: Int!
  month: Int!
  amount: Int!
  ignore_status: Boolean!
  paid_status: Boolean!
  paid_date: DateTime
}

type TransferPlanConnection {
  pageInfo: PageInfo!
  edges: [TransferPlanEdge]!
  aggregate: AggregateTransferPlan!
}

input TransferPlanCreateInput {
  artist: UserCreateOneInput!
  subscriber: UserCreateOneInput!
  year: Int!
  month: Int!
  amount: Int!
  ignore_status: Boolean
  paid_status: Boolean
  paid_date: DateTime
}

type TransferPlanEdge {
  node: TransferPlan!
  cursor: String!
}

enum TransferPlanOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  year_ASC
  year_DESC
  month_ASC
  month_DESC
  amount_ASC
  amount_DESC
  ignore_status_ASC
  ignore_status_DESC
  paid_status_ASC
  paid_status_DESC
  paid_date_ASC
  paid_date_DESC
}

type TransferPlanPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  amount: Int!
  ignore_status: Boolean!
  paid_status: Boolean!
  paid_date: DateTime
}

type TransferPlanSubscriptionPayload {
  mutation: MutationType!
  node: TransferPlan
  updatedFields: [String!]
  previousValues: TransferPlanPreviousValues
}

input TransferPlanSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TransferPlanWhereInput
  AND: [TransferPlanSubscriptionWhereInput!]
  OR: [TransferPlanSubscriptionWhereInput!]
  NOT: [TransferPlanSubscriptionWhereInput!]
}

input TransferPlanUpdateInput {
  artist: UserUpdateOneRequiredInput
  subscriber: UserUpdateOneRequiredInput
  year: Int
  month: Int
  amount: Int
  ignore_status: Boolean
  paid_status: Boolean
  paid_date: DateTime
}

input TransferPlanUpdateManyMutationInput {
  year: Int
  month: Int
  amount: Int
  ignore_status: Boolean
  paid_status: Boolean
  paid_date: DateTime
}

input TransferPlanWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  artist: UserWhereInput
  subscriber: UserWhereInput
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  amount: Int
  amount_not: Int
  amount_in: [Int!]
  amount_not_in: [Int!]
  amount_lt: Int
  amount_lte: Int
  amount_gt: Int
  amount_gte: Int
  ignore_status: Boolean
  ignore_status_not: Boolean
  paid_status: Boolean
  paid_status_not: Boolean
  paid_date: DateTime
  paid_date_not: DateTime
  paid_date_in: [DateTime!]
  paid_date_not_in: [DateTime!]
  paid_date_lt: DateTime
  paid_date_lte: DateTime
  paid_date_gt: DateTime
  paid_date_gte: DateTime
  AND: [TransferPlanWhereInput!]
  OR: [TransferPlanWhereInput!]
  NOT: [TransferPlanWhereInput!]
}

input TransferPlanWhereUniqueInput {
  id: ID
}

type TransferTransaction {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  artist: User!
  year: Int!
  month: Int!
  amount: Int!
  paid_status: Boolean!
  paid_date: DateTime
}

type TransferTransactionConnection {
  pageInfo: PageInfo!
  edges: [TransferTransactionEdge]!
  aggregate: AggregateTransferTransaction!
}

input TransferTransactionCreateInput {
  artist: UserCreateOneInput!
  year: Int!
  month: Int!
  amount: Int!
  paid_status: Boolean
  paid_date: DateTime
}

type TransferTransactionEdge {
  node: TransferTransaction!
  cursor: String!
}

enum TransferTransactionOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  year_ASC
  year_DESC
  month_ASC
  month_DESC
  amount_ASC
  amount_DESC
  paid_status_ASC
  paid_status_DESC
  paid_date_ASC
  paid_date_DESC
}

type TransferTransactionPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  amount: Int!
  paid_status: Boolean!
  paid_date: DateTime
}

type TransferTransactionSubscriptionPayload {
  mutation: MutationType!
  node: TransferTransaction
  updatedFields: [String!]
  previousValues: TransferTransactionPreviousValues
}

input TransferTransactionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TransferTransactionWhereInput
  AND: [TransferTransactionSubscriptionWhereInput!]
  OR: [TransferTransactionSubscriptionWhereInput!]
  NOT: [TransferTransactionSubscriptionWhereInput!]
}

input TransferTransactionUpdateInput {
  artist: UserUpdateOneRequiredInput
  year: Int
  month: Int
  amount: Int
  paid_status: Boolean
  paid_date: DateTime
}

input TransferTransactionUpdateManyMutationInput {
  year: Int
  month: Int
  amount: Int
  paid_status: Boolean
  paid_date: DateTime
}

input TransferTransactionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  artist: UserWhereInput
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  amount: Int
  amount_not: Int
  amount_in: [Int!]
  amount_not_in: [Int!]
  amount_lt: Int
  amount_lte: Int
  amount_gt: Int
  amount_gte: Int
  paid_status: Boolean
  paid_status_not: Boolean
  paid_date: DateTime
  paid_date_not: DateTime
  paid_date_in: [DateTime!]
  paid_date_not_in: [DateTime!]
  paid_date_lt: DateTime
  paid_date_lte: DateTime
  paid_date_gt: DateTime
  paid_date_gte: DateTime
  AND: [TransferTransactionWhereInput!]
  OR: [TransferTransactionWhereInput!]
  NOT: [TransferTransactionWhereInput!]
}

input TransferTransactionWhereUniqueInput {
  id: ID
}

type User {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    firstname: String
    lastname: String
    username: String
    email: String!
    phone: String
    role: UserRole!
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: User
    users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
    front_id_scan: String
    back_id_scan: String
    my_videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
    liked_videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
    watched_videos(where: WatchedVideoUserWhereInput, orderBy: WatchedVideoUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [WatchedVideoUser!]
    my_subscription_users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
    subscribed_users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
    billing_subscription_active: Boolean!
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

type UserConnection {
    pageInfo: PageInfo!
    edges: [UserEdge]!
    aggregate: AggregateUser!
}

input UserCreateInput {
    firstname: String
    lastname: String
    username: String
    email: String!
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserCreateOneWithoutUsersInput
    users: UserCreateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoCreateManyWithoutAuthorInput
    liked_videos: VideoCreateManyWithoutLike_usersInput
    watched_videos: WatchedVideoUserCreateManyWithoutUserInput
    my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
    subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserCreateManyWithoutArtistInput {
  create: [UserCreateWithoutArtistInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutLiked_videosInput {
    create: [UserCreateWithoutLiked_videosInput!]
    connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutMy_subscription_usersInput {
    create: [UserCreateWithoutMy_subscription_usersInput!]
    connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutSubscribed_usersInput {
    create: [UserCreateWithoutSubscribed_usersInput!]
    connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
    create: UserCreateInput
    connect: UserWhereUniqueInput
}

input UserCreateOneWithoutMy_videosInput {
    create: UserCreateWithoutMy_videosInput
    connect: UserWhereUniqueInput
}

input UserCreateOneWithoutUsersInput {
  create: UserCreateWithoutUsersInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutWatched_videosInput {
    create: UserCreateWithoutWatched_videosInput
    connect: UserWhereUniqueInput
}

input UserCreateWithoutArtistInput {
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole
  approved: Boolean
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  promo_code: String
  payout_amount: Int
  payout_months_total: Int
  payout_months_left: Int
  payout_enabled: Boolean
  users: UserCreateManyWithoutArtistInput
  front_id_scan: String
  back_id_scan: String
  my_videos: VideoCreateManyWithoutAuthorInput
  liked_videos: VideoCreateManyWithoutLike_usersInput
  watched_videos: WatchedVideoUserCreateManyWithoutUserInput
  my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
  subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserCreateWithoutLiked_videosInput {
    firstname: String
    lastname: String
    username: String
    email: String!
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserCreateOneWithoutUsersInput
    users: UserCreateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoCreateManyWithoutAuthorInput
    watched_videos: WatchedVideoUserCreateManyWithoutUserInput
    my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
    subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserCreateWithoutMy_subscription_usersInput {
    firstname: String
    lastname: String
    username: String
    email: String!
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserCreateOneWithoutUsersInput
    users: UserCreateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoCreateManyWithoutAuthorInput
    liked_videos: VideoCreateManyWithoutLike_usersInput
    watched_videos: WatchedVideoUserCreateManyWithoutUserInput
    subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserCreateWithoutMy_videosInput {
    firstname: String
    lastname: String
    username: String
    email: String!
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserCreateOneWithoutUsersInput
    users: UserCreateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    liked_videos: VideoCreateManyWithoutLike_usersInput
    watched_videos: WatchedVideoUserCreateManyWithoutUserInput
    my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
    subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserCreateWithoutSubscribed_usersInput {
    firstname: String
    lastname: String
    username: String
    email: String!
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserCreateOneWithoutUsersInput
    users: UserCreateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoCreateManyWithoutAuthorInput
    liked_videos: VideoCreateManyWithoutLike_usersInput
    watched_videos: WatchedVideoUserCreateManyWithoutUserInput
    my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserCreateWithoutUsersInput {
  firstname: String
  lastname: String
  username: String
  email: String!
  phone: String
  role: UserRole
  approved: Boolean
  password_hash: String!
  password_salt: String!
  avatar: String
  background_image: String
  about_text: String
  promo_code: String
  payout_amount: Int
  payout_months_total: Int
  payout_months_left: Int
  payout_enabled: Boolean
  artist: UserCreateOneWithoutUsersInput
  front_id_scan: String
  back_id_scan: String
  my_videos: VideoCreateManyWithoutAuthorInput
  liked_videos: VideoCreateManyWithoutLike_usersInput
  watched_videos: WatchedVideoUserCreateManyWithoutUserInput
  my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
  subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserCreateWithoutWatched_videosInput {
    firstname: String
    lastname: String
    username: String
    email: String!
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserCreateOneWithoutUsersInput
    users: UserCreateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoCreateManyWithoutAuthorInput
    liked_videos: VideoCreateManyWithoutLike_usersInput
    my_subscription_users: UserCreateManyWithoutSubscribed_usersInput
    subscribed_users: UserCreateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

type UserEdge {
    node: User!
    cursor: String!
}

enum UserOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
    firstname_ASC
    firstname_DESC
    lastname_ASC
    lastname_DESC
    username_ASC
    username_DESC
    email_ASC
    email_DESC
    phone_ASC
    phone_DESC
    role_ASC
    role_DESC
    approved_ASC
    approved_DESC
    avatar_ASC
    avatar_DESC
    background_image_ASC
    background_image_DESC
    about_text_ASC
    about_text_DESC
    promo_code_ASC
    promo_code_DESC
    payout_amount_ASC
    payout_amount_DESC
    payout_months_total_ASC
    payout_months_total_DESC
    payout_months_left_ASC
    payout_months_left_DESC
    payout_enabled_ASC
    payout_enabled_DESC
    front_id_scan_ASC
    front_id_scan_DESC
    back_id_scan_ASC
    back_id_scan_DESC
    billing_subscription_active_ASC
    billing_subscription_active_DESC
    stripe_customer_id_ASC
    stripe_customer_id_DESC
    stripe_subsciption_json_ASC
    stripe_subsciption_json_DESC
    last_login_date_ASC
    last_login_date_DESC
}

type UserPreviousValues {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    firstname: String
    lastname: String
    username: String
    email: String!
    phone: String
    role: UserRole!
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    front_id_scan: String
    back_id_scan: String
    billing_subscription_active: Boolean!
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

enum UserRole {
    USER_VIEWER
    USER_PUBLISHER
    MODERATOR
    ADMIN
}

input UserScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    firstname: String
    firstname_not: String
    firstname_in: [String!]
    firstname_not_in: [String!]
    firstname_lt: String
    firstname_lte: String
    firstname_gt: String
    firstname_gte: String
    firstname_contains: String
    firstname_not_contains: String
    firstname_starts_with: String
    firstname_not_starts_with: String
    firstname_ends_with: String
    firstname_not_ends_with: String
    lastname: String
    lastname_not: String
    lastname_in: [String!]
    lastname_not_in: [String!]
    lastname_lt: String
    lastname_lte: String
    lastname_gt: String
    lastname_gte: String
    lastname_contains: String
    lastname_not_contains: String
    lastname_starts_with: String
    lastname_not_starts_with: String
    lastname_ends_with: String
    lastname_not_ends_with: String
    username: String
    username_not: String
    username_in: [String!]
    username_not_in: [String!]
    username_lt: String
    username_lte: String
    username_gt: String
    username_gte: String
    username_contains: String
    username_not_contains: String
    username_starts_with: String
    username_not_starts_with: String
    username_ends_with: String
    username_not_ends_with: String
    email: String
    email_not: String
    email_in: [String!]
    email_not_in: [String!]
    email_lt: String
    email_lte: String
    email_gt: String
    email_gte: String
    email_contains: String
    email_not_contains: String
    email_starts_with: String
    email_not_starts_with: String
    email_ends_with: String
    email_not_ends_with: String
    phone: String
    phone_not: String
    phone_in: [String!]
    phone_not_in: [String!]
    phone_lt: String
    phone_lte: String
    phone_gt: String
    phone_gte: String
    phone_contains: String
    phone_not_contains: String
    phone_starts_with: String
    phone_not_starts_with: String
    phone_ends_with: String
    phone_not_ends_with: String
    role: UserRole
    role_not: UserRole
    role_in: [UserRole!]
    role_not_in: [UserRole!]
    approved: Boolean
    approved_not: Boolean
    avatar: String
    avatar_not: String
    avatar_in: [String!]
    avatar_not_in: [String!]
    avatar_lt: String
    avatar_lte: String
    avatar_gt: String
    avatar_gte: String
    avatar_contains: String
    avatar_not_contains: String
    avatar_starts_with: String
    avatar_not_starts_with: String
    avatar_ends_with: String
    avatar_not_ends_with: String
    background_image: String
    background_image_not: String
    background_image_in: [String!]
    background_image_not_in: [String!]
    background_image_lt: String
    background_image_lte: String
    background_image_gt: String
    background_image_gte: String
    background_image_contains: String
    background_image_not_contains: String
    background_image_starts_with: String
    background_image_not_starts_with: String
    background_image_ends_with: String
    background_image_not_ends_with: String
    about_text: String
    about_text_not: String
    about_text_in: [String!]
    about_text_not_in: [String!]
    about_text_lt: String
    about_text_lte: String
    about_text_gt: String
    about_text_gte: String
    about_text_contains: String
    about_text_not_contains: String
    about_text_starts_with: String
    about_text_not_starts_with: String
    about_text_ends_with: String
    about_text_not_ends_with: String
    promo_code: String
    promo_code_not: String
    promo_code_in: [String!]
    promo_code_not_in: [String!]
    promo_code_lt: String
    promo_code_lte: String
    promo_code_gt: String
    promo_code_gte: String
    promo_code_contains: String
    promo_code_not_contains: String
    promo_code_starts_with: String
    promo_code_not_starts_with: String
    promo_code_ends_with: String
    promo_code_not_ends_with: String
    payout_amount: Int
    payout_amount_not: Int
    payout_amount_in: [Int!]
    payout_amount_not_in: [Int!]
    payout_amount_lt: Int
    payout_amount_lte: Int
    payout_amount_gt: Int
    payout_amount_gte: Int
    payout_months_total: Int
    payout_months_total_not: Int
    payout_months_total_in: [Int!]
    payout_months_total_not_in: [Int!]
    payout_months_total_lt: Int
    payout_months_total_lte: Int
    payout_months_total_gt: Int
    payout_months_total_gte: Int
    payout_months_left: Int
    payout_months_left_not: Int
    payout_months_left_in: [Int!]
    payout_months_left_not_in: [Int!]
    payout_months_left_lt: Int
    payout_months_left_lte: Int
    payout_months_left_gt: Int
    payout_months_left_gte: Int
    payout_enabled: Boolean
    payout_enabled_not: Boolean
    front_id_scan: String
    front_id_scan_not: String
    front_id_scan_in: [String!]
    front_id_scan_not_in: [String!]
    front_id_scan_lt: String
    front_id_scan_lte: String
    front_id_scan_gt: String
    front_id_scan_gte: String
    front_id_scan_contains: String
    front_id_scan_not_contains: String
    front_id_scan_starts_with: String
    front_id_scan_not_starts_with: String
    front_id_scan_ends_with: String
    front_id_scan_not_ends_with: String
    back_id_scan: String
    back_id_scan_not: String
    back_id_scan_in: [String!]
    back_id_scan_not_in: [String!]
    back_id_scan_lt: String
    back_id_scan_lte: String
    back_id_scan_gt: String
    back_id_scan_gte: String
    back_id_scan_contains: String
    back_id_scan_not_contains: String
    back_id_scan_starts_with: String
    back_id_scan_not_starts_with: String
    back_id_scan_ends_with: String
    back_id_scan_not_ends_with: String
    billing_subscription_active: Boolean
    billing_subscription_active_not: Boolean
    stripe_customer_id: String
    stripe_customer_id_not: String
    stripe_customer_id_in: [String!]
    stripe_customer_id_not_in: [String!]
    stripe_customer_id_lt: String
    stripe_customer_id_lte: String
    stripe_customer_id_gt: String
    stripe_customer_id_gte: String
    stripe_customer_id_contains: String
    stripe_customer_id_not_contains: String
    stripe_customer_id_starts_with: String
    stripe_customer_id_not_starts_with: String
    stripe_customer_id_ends_with: String
    stripe_customer_id_not_ends_with: String
    last_login_date: DateTime
    last_login_date_not: DateTime
    last_login_date_in: [DateTime!]
    last_login_date_not_in: [DateTime!]
    last_login_date_lt: DateTime
    last_login_date_lte: DateTime
    last_login_date_gt: DateTime
    last_login_date_gte: DateTime
    AND: [UserScalarWhereInput!]
    OR: [UserScalarWhereInput!]
    NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
    mutation: MutationType!
    node: User
    updatedFields: [String!]
    previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: UserWhereInput
    AND: [UserSubscriptionWhereInput!]
    OR: [UserSubscriptionWhereInput!]
    NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateDataInput {
    firstname: String
    lastname: String
    username: String
    email: String
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserUpdateOneWithoutUsersInput
    users: UserUpdateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoUpdateManyWithoutAuthorInput
    liked_videos: VideoUpdateManyWithoutLike_usersInput
    watched_videos: WatchedVideoUserUpdateManyWithoutUserInput
    my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
    subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserUpdateInput {
    firstname: String
    lastname: String
    username: String
    email: String
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserUpdateOneWithoutUsersInput
    users: UserUpdateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoUpdateManyWithoutAuthorInput
    liked_videos: VideoUpdateManyWithoutLike_usersInput
    watched_videos: WatchedVideoUserUpdateManyWithoutUserInput
    my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
    subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserUpdateManyDataInput {
    firstname: String
    lastname: String
    username: String
    email: String
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    front_id_scan: String
    back_id_scan: String
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserUpdateManyMutationInput {
    firstname: String
    lastname: String
    username: String
    email: String
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    front_id_scan: String
    back_id_scan: String
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserUpdateManyWithoutArtistInput {
  create: [UserCreateWithoutArtistInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutArtistInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutArtistInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutLiked_videosInput {
    create: [UserCreateWithoutLiked_videosInput!]
    delete: [UserWhereUniqueInput!]
    connect: [UserWhereUniqueInput!]
    set: [UserWhereUniqueInput!]
    disconnect: [UserWhereUniqueInput!]
    update: [UserUpdateWithWhereUniqueWithoutLiked_videosInput!]
    upsert: [UserUpsertWithWhereUniqueWithoutLiked_videosInput!]
    deleteMany: [UserScalarWhereInput!]
    updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutMy_subscription_usersInput {
    create: [UserCreateWithoutMy_subscription_usersInput!]
    delete: [UserWhereUniqueInput!]
    connect: [UserWhereUniqueInput!]
    set: [UserWhereUniqueInput!]
    disconnect: [UserWhereUniqueInput!]
    update: [UserUpdateWithWhereUniqueWithoutMy_subscription_usersInput!]
    upsert: [UserUpsertWithWhereUniqueWithoutMy_subscription_usersInput!]
    deleteMany: [UserScalarWhereInput!]
    updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutSubscribed_usersInput {
    create: [UserCreateWithoutSubscribed_usersInput!]
    delete: [UserWhereUniqueInput!]
    connect: [UserWhereUniqueInput!]
    set: [UserWhereUniqueInput!]
    disconnect: [UserWhereUniqueInput!]
    update: [UserUpdateWithWhereUniqueWithoutSubscribed_usersInput!]
    upsert: [UserUpsertWithWhereUniqueWithoutSubscribed_usersInput!]
    deleteMany: [UserScalarWhereInput!]
    updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithWhereNestedInput {
    where: UserScalarWhereInput!
    data: UserUpdateManyDataInput!
}

input UserUpdateOneInput {
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredInput {
    create: UserCreateInput
    update: UserUpdateDataInput
    upsert: UserUpsertNestedInput
    connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutMy_videosInput {
    create: UserCreateWithoutMy_videosInput
    update: UserUpdateWithoutMy_videosDataInput
    upsert: UserUpsertWithoutMy_videosInput
    connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutWatched_videosInput {
  create: UserCreateWithoutWatched_videosInput
  update: UserUpdateWithoutWatched_videosDataInput
  upsert: UserUpsertWithoutWatched_videosInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutUsersInput {
  create: UserCreateWithoutUsersInput
  update: UserUpdateWithoutUsersDataInput
  upsert: UserUpsertWithoutUsersInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutArtistDataInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  approved: Boolean
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  promo_code: String
  payout_amount: Int
  payout_months_total: Int
  payout_months_left: Int
  payout_enabled: Boolean
  users: UserUpdateManyWithoutArtistInput
  front_id_scan: String
  back_id_scan: String
  my_videos: VideoUpdateManyWithoutAuthorInput
  liked_videos: VideoUpdateManyWithoutLike_usersInput
  watched_videos: WatchedVideoUserUpdateManyWithoutUserInput
  my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
  subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateWithoutLiked_videosDataInput {
    firstname: String
    lastname: String
    username: String
    email: String
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserUpdateOneWithoutUsersInput
    users: UserUpdateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoUpdateManyWithoutAuthorInput
    watched_videos: WatchedVideoUserUpdateManyWithoutUserInput
    my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
    subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserUpdateWithoutMy_subscription_usersDataInput {
    firstname: String
    lastname: String
    username: String
    email: String
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserUpdateOneWithoutUsersInput
    users: UserUpdateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoUpdateManyWithoutAuthorInput
    liked_videos: VideoUpdateManyWithoutLike_usersInput
    watched_videos: WatchedVideoUserUpdateManyWithoutUserInput
    subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserUpdateWithoutMy_videosDataInput {
    firstname: String
    lastname: String
    username: String
    email: String
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserUpdateOneWithoutUsersInput
    users: UserUpdateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    liked_videos: VideoUpdateManyWithoutLike_usersInput
    watched_videos: WatchedVideoUserUpdateManyWithoutUserInput
    my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
    subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserUpdateWithoutSubscribed_usersDataInput {
    firstname: String
    lastname: String
    username: String
    email: String
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserUpdateOneWithoutUsersInput
    users: UserUpdateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoUpdateManyWithoutAuthorInput
    liked_videos: VideoUpdateManyWithoutLike_usersInput
    watched_videos: WatchedVideoUserUpdateManyWithoutUserInput
    my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserUpdateWithoutUsersDataInput {
  firstname: String
  lastname: String
  username: String
  email: String
  phone: String
  role: UserRole
  approved: Boolean
  password_hash: String
  password_salt: String
  avatar: String
  background_image: String
  about_text: String
  promo_code: String
  payout_amount: Int
  payout_months_total: Int
  payout_months_left: Int
  payout_enabled: Boolean
  artist: UserUpdateOneWithoutUsersInput
  front_id_scan: String
  back_id_scan: String
  my_videos: VideoUpdateManyWithoutAuthorInput
  liked_videos: VideoUpdateManyWithoutLike_usersInput
  watched_videos: WatchedVideoUserUpdateManyWithoutUserInput
  my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
  subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
  billing_subscription_active: Boolean
  stripe_customer_id: String
  stripe_subsciption_json: Json
  last_login_date: DateTime
}

input UserUpdateWithoutWatched_videosDataInput {
    firstname: String
    lastname: String
    username: String
    email: String
    phone: String
    role: UserRole
    approved: Boolean
    avatar: String
    background_image: String
    about_text: String
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    payout_months_left: Int
    payout_enabled: Boolean
    artist: UserUpdateOneWithoutUsersInput
    users: UserUpdateManyWithoutArtistInput
    front_id_scan: String
    back_id_scan: String
    my_videos: VideoUpdateManyWithoutAuthorInput
    liked_videos: VideoUpdateManyWithoutLike_usersInput
    my_subscription_users: UserUpdateManyWithoutSubscribed_usersInput
    subscribed_users: UserUpdateManyWithoutMy_subscription_usersInput
    billing_subscription_active: Boolean
    stripe_customer_id: String
    stripe_subsciption_json: Json
    last_login_date: DateTime
}

input UserUpdateWithWhereUniqueWithoutArtistInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutArtistDataInput!
}

input UserUpdateWithWhereUniqueWithoutLiked_videosInput {
    where: UserWhereUniqueInput!
    data: UserUpdateWithoutLiked_videosDataInput!
}

input UserUpdateWithWhereUniqueWithoutMy_subscription_usersInput {
    where: UserWhereUniqueInput!
    data: UserUpdateWithoutMy_subscription_usersDataInput!
}

input UserUpdateWithWhereUniqueWithoutSubscribed_usersInput {
    where: UserWhereUniqueInput!
    data: UserUpdateWithoutSubscribed_usersDataInput!
}

input UserUpsertNestedInput {
    update: UserUpdateDataInput!
    create: UserCreateInput!
}

input UserUpsertWithoutMy_videosInput {
    update: UserUpdateWithoutMy_videosDataInput!
    create: UserCreateWithoutMy_videosInput!
}

input UserUpsertWithoutUsersInput {
  update: UserUpdateWithoutUsersDataInput!
  create: UserCreateWithoutUsersInput!
}

input UserUpsertWithoutWatched_videosInput {
  update: UserUpdateWithoutWatched_videosDataInput!
  create: UserCreateWithoutWatched_videosInput!
}

input UserUpsertWithWhereUniqueWithoutArtistInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutArtistDataInput!
  create: UserCreateWithoutArtistInput!
}

input UserUpsertWithWhereUniqueWithoutLiked_videosInput {
    where: UserWhereUniqueInput!
    update: UserUpdateWithoutLiked_videosDataInput!
    create: UserCreateWithoutLiked_videosInput!
}

input UserUpsertWithWhereUniqueWithoutMy_subscription_usersInput {
    where: UserWhereUniqueInput!
    update: UserUpdateWithoutMy_subscription_usersDataInput!
    create: UserCreateWithoutMy_subscription_usersInput!
}

input UserUpsertWithWhereUniqueWithoutSubscribed_usersInput {
    where: UserWhereUniqueInput!
    update: UserUpdateWithoutSubscribed_usersDataInput!
    create: UserCreateWithoutSubscribed_usersInput!
}

input UserWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    firstname: String
    firstname_not: String
    firstname_in: [String!]
    firstname_not_in: [String!]
    firstname_lt: String
    firstname_lte: String
    firstname_gt: String
    firstname_gte: String
    firstname_contains: String
    firstname_not_contains: String
    firstname_starts_with: String
    firstname_not_starts_with: String
    firstname_ends_with: String
    firstname_not_ends_with: String
    lastname: String
    lastname_not: String
    lastname_in: [String!]
    lastname_not_in: [String!]
    lastname_lt: String
    lastname_lte: String
    lastname_gt: String
    lastname_gte: String
    lastname_contains: String
    lastname_not_contains: String
    lastname_starts_with: String
    lastname_not_starts_with: String
    lastname_ends_with: String
    lastname_not_ends_with: String
    username: String
    username_not: String
    username_in: [String!]
    username_not_in: [String!]
    username_lt: String
    username_lte: String
    username_gt: String
    username_gte: String
    username_contains: String
    username_not_contains: String
    username_starts_with: String
    username_not_starts_with: String
    username_ends_with: String
    username_not_ends_with: String
    email: String
    email_not: String
    email_in: [String!]
    email_not_in: [String!]
    email_lt: String
    email_lte: String
    email_gt: String
    email_gte: String
    email_contains: String
    email_not_contains: String
    email_starts_with: String
    email_not_starts_with: String
    email_ends_with: String
    email_not_ends_with: String
    phone: String
    phone_not: String
    phone_in: [String!]
    phone_not_in: [String!]
    phone_lt: String
    phone_lte: String
    phone_gt: String
    phone_gte: String
    phone_contains: String
    phone_not_contains: String
    phone_starts_with: String
    phone_not_starts_with: String
    phone_ends_with: String
    phone_not_ends_with: String
    role: UserRole
    role_not: UserRole
    role_in: [UserRole!]
    role_not_in: [UserRole!]
    approved: Boolean
    approved_not: Boolean
    avatar: String
    avatar_not: String
    avatar_in: [String!]
    avatar_not_in: [String!]
    avatar_lt: String
    avatar_lte: String
    avatar_gt: String
    avatar_gte: String
    avatar_contains: String
    avatar_not_contains: String
    avatar_starts_with: String
    avatar_not_starts_with: String
    avatar_ends_with: String
    avatar_not_ends_with: String
    background_image: String
    background_image_not: String
    background_image_in: [String!]
    background_image_not_in: [String!]
    background_image_lt: String
    background_image_lte: String
    background_image_gt: String
    background_image_gte: String
    background_image_contains: String
    background_image_not_contains: String
    background_image_starts_with: String
    background_image_not_starts_with: String
    background_image_ends_with: String
    background_image_not_ends_with: String
    about_text: String
    about_text_not: String
    about_text_in: [String!]
    about_text_not_in: [String!]
    about_text_lt: String
    about_text_lte: String
    about_text_gt: String
    about_text_gte: String
    about_text_contains: String
    about_text_not_contains: String
    about_text_starts_with: String
    about_text_not_starts_with: String
    about_text_ends_with: String
    about_text_not_ends_with: String
    promo_code: String
    promo_code_not: String
    promo_code_in: [String!]
    promo_code_not_in: [String!]
    promo_code_lt: String
    promo_code_lte: String
    promo_code_gt: String
    promo_code_gte: String
    promo_code_contains: String
    promo_code_not_contains: String
    promo_code_starts_with: String
    promo_code_not_starts_with: String
    promo_code_ends_with: String
    promo_code_not_ends_with: String
    payout_amount: Int
    payout_amount_not: Int
    payout_amount_in: [Int!]
    payout_amount_not_in: [Int!]
    payout_amount_lt: Int
    payout_amount_lte: Int
    payout_amount_gt: Int
    payout_amount_gte: Int
    payout_months_total: Int
    payout_months_total_not: Int
    payout_months_total_in: [Int!]
    payout_months_total_not_in: [Int!]
    payout_months_total_lt: Int
    payout_months_total_lte: Int
    payout_months_total_gt: Int
    payout_months_total_gte: Int
    payout_months_left: Int
    payout_months_left_not: Int
    payout_months_left_in: [Int!]
    payout_months_left_not_in: [Int!]
    payout_months_left_lt: Int
    payout_months_left_lte: Int
    payout_months_left_gt: Int
    payout_months_left_gte: Int
    payout_enabled: Boolean
    payout_enabled_not: Boolean
    artist: UserWhereInput
    users_every: UserWhereInput
    users_some: UserWhereInput
    users_none: UserWhereInput
    front_id_scan: String
    front_id_scan_not: String
    front_id_scan_in: [String!]
    front_id_scan_not_in: [String!]
    front_id_scan_lt: String
    front_id_scan_lte: String
    front_id_scan_gt: String
    front_id_scan_gte: String
    front_id_scan_contains: String
    front_id_scan_not_contains: String
    front_id_scan_starts_with: String
    front_id_scan_not_starts_with: String
    front_id_scan_ends_with: String
    front_id_scan_not_ends_with: String
    back_id_scan: String
    back_id_scan_not: String
    back_id_scan_in: [String!]
    back_id_scan_not_in: [String!]
    back_id_scan_lt: String
    back_id_scan_lte: String
    back_id_scan_gt: String
    back_id_scan_gte: String
    back_id_scan_contains: String
    back_id_scan_not_contains: String
    back_id_scan_starts_with: String
    back_id_scan_not_starts_with: String
    back_id_scan_ends_with: String
    back_id_scan_not_ends_with: String
    my_videos_every: VideoWhereInput
    my_videos_some: VideoWhereInput
    my_videos_none: VideoWhereInput
    liked_videos_every: VideoWhereInput
    liked_videos_some: VideoWhereInput
    liked_videos_none: VideoWhereInput
    watched_videos_every: WatchedVideoUserWhereInput
    watched_videos_some: WatchedVideoUserWhereInput
    watched_videos_none: WatchedVideoUserWhereInput
    my_subscription_users_every: UserWhereInput
    my_subscription_users_some: UserWhereInput
    my_subscription_users_none: UserWhereInput
    subscribed_users_every: UserWhereInput
    subscribed_users_some: UserWhereInput
    subscribed_users_none: UserWhereInput
    billing_subscription_active: Boolean
    billing_subscription_active_not: Boolean
    stripe_customer_id: String
    stripe_customer_id_not: String
    stripe_customer_id_in: [String!]
    stripe_customer_id_not_in: [String!]
    stripe_customer_id_lt: String
    stripe_customer_id_lte: String
    stripe_customer_id_gt: String
    stripe_customer_id_gte: String
    stripe_customer_id_contains: String
    stripe_customer_id_not_contains: String
    stripe_customer_id_starts_with: String
    stripe_customer_id_not_starts_with: String
    stripe_customer_id_ends_with: String
    stripe_customer_id_not_ends_with: String
    last_login_date: DateTime
    last_login_date_not: DateTime
    last_login_date_in: [DateTime!]
    last_login_date_not_in: [DateTime!]
    last_login_date_lt: DateTime
    last_login_date_lte: DateTime
    last_login_date_gt: DateTime
    last_login_date_gte: DateTime
    AND: [UserWhereInput!]
    OR: [UserWhereInput!]
    NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
    id: ID
    email: String
    phone: String
    stripe_customer_id: String
}

type Video {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: User!
    categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
    like_users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
    watched_users(where: WatchedVideoUserWhereInput, orderBy: WatchedVideoUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [WatchedVideoUser!]
    tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
    deleted: Boolean!
}

type VideoConnection {
    pageInfo: PageInfo!
    edges: [VideoEdge]!
    aggregate: AggregateVideo!
}

input VideoCreateInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserCreateOneWithoutMy_videosInput!
    categories: CategoryCreateManyWithoutVideosInput
    like_users: UserCreateManyWithoutLiked_videosInput
    watched_users: WatchedVideoUserCreateManyWithoutVideoInput
    tags: TagCreateManyWithoutVideosInput
    deleted: Boolean
}

input VideoCreateManyWithoutAuthorInput {
    create: [VideoCreateWithoutAuthorInput!]
    connect: [VideoWhereUniqueInput!]
}

input VideoCreateManyWithoutCategoriesInput {
    create: [VideoCreateWithoutCategoriesInput!]
    connect: [VideoWhereUniqueInput!]
}

input VideoCreateManyWithoutLike_usersInput {
    create: [VideoCreateWithoutLike_usersInput!]
    connect: [VideoWhereUniqueInput!]
}

input VideoCreateManyWithoutTagsInput {
    create: [VideoCreateWithoutTagsInput!]
    connect: [VideoWhereUniqueInput!]
}

input VideoCreateOneInput {
    create: VideoCreateInput
    connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutWatched_usersInput {
   create: VideoCreateWithoutWatched_usersInput
   connect: VideoWhereUniqueInput
}

input VideoCreateWithoutAuthorInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    categories: CategoryCreateManyWithoutVideosInput
    like_users: UserCreateManyWithoutLiked_videosInput
    watched_users: WatchedVideoUserCreateManyWithoutVideoInput
    tags: TagCreateManyWithoutVideosInput
    deleted: Boolean
}

input VideoCreateWithoutCategoriesInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserCreateOneWithoutMy_videosInput!
    like_users: UserCreateManyWithoutLiked_videosInput
    watched_users: WatchedVideoUserCreateManyWithoutVideoInput
    tags: TagCreateManyWithoutVideosInput
    deleted: Boolean
}

input VideoCreateWithoutLike_usersInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserCreateOneWithoutMy_videosInput!
    categories: CategoryCreateManyWithoutVideosInput
    watched_users: WatchedVideoUserCreateManyWithoutVideoInput
    tags: TagCreateManyWithoutVideosInput
    deleted: Boolean
}

input VideoCreateWithoutTagsInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserCreateOneWithoutMy_videosInput!
    categories: CategoryCreateManyWithoutVideosInput
    like_users: UserCreateManyWithoutLiked_videosInput
    watched_users: WatchedVideoUserCreateManyWithoutVideoInput
    deleted: Boolean
}

input VideoCreateWithoutWatched_usersInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserCreateOneWithoutMy_videosInput!
    categories: CategoryCreateManyWithoutVideosInput
    like_users: UserCreateManyWithoutLiked_videosInput
    tags: TagCreateManyWithoutVideosInput
    deleted: Boolean
}

type VideoDataForMonth {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  video: Video!
  video_length: Int!
  unique_users: Int!
  real_minutes_watched: Int!
  avg_minutes_watched: Int!
  exponent_applied: Int!
  minutes_after_exponent: Int!
}

type VideoDataForMonthConnection {
  pageInfo: PageInfo!
  edges: [VideoDataForMonthEdge]!
  aggregate: AggregateVideoDataForMonth!
}

input VideoDataForMonthCreateInput {
  year: Int!
  month: Int!
  video: VideoCreateOneInput!
  video_length: Int!
  unique_users: Int
  real_minutes_watched: Int
  avg_minutes_watched: Int
  exponent_applied: Int
  minutes_after_exponent: Int
}

type VideoDataForMonthEdge {
  node: VideoDataForMonth!
  cursor: String!
}

enum VideoDataForMonthOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  year_ASC
  year_DESC
  month_ASC
  month_DESC
  video_length_ASC
  video_length_DESC
  unique_users_ASC
  unique_users_DESC
  real_minutes_watched_ASC
  real_minutes_watched_DESC
  avg_minutes_watched_ASC
  avg_minutes_watched_DESC
  exponent_applied_ASC
  exponent_applied_DESC
  minutes_after_exponent_ASC
  minutes_after_exponent_DESC
}

type VideoDataForMonthPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  video_length: Int!
  unique_users: Int!
  real_minutes_watched: Int!
  avg_minutes_watched: Int!
  exponent_applied: Int!
  minutes_after_exponent: Int!
}

type VideoDataForMonthSubscriptionPayload {
  mutation: MutationType!
  node: VideoDataForMonth
  updatedFields: [String!]
  previousValues: VideoDataForMonthPreviousValues
}

input VideoDataForMonthSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VideoDataForMonthWhereInput
  AND: [VideoDataForMonthSubscriptionWhereInput!]
  OR: [VideoDataForMonthSubscriptionWhereInput!]
  NOT: [VideoDataForMonthSubscriptionWhereInput!]
}

input VideoDataForMonthUpdateInput {
  year: Int
  month: Int
  video: VideoUpdateOneRequiredInput
  video_length: Int
  unique_users: Int
  real_minutes_watched: Int
  avg_minutes_watched: Int
  exponent_applied: Int
  minutes_after_exponent: Int
}

input VideoDataForMonthUpdateManyMutationInput {
  year: Int
  month: Int
  video_length: Int
  unique_users: Int
  real_minutes_watched: Int
  avg_minutes_watched: Int
  exponent_applied: Int
  minutes_after_exponent: Int
}

input VideoDataForMonthWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  video: VideoWhereInput
  video_length: Int
  video_length_not: Int
  video_length_in: [Int!]
  video_length_not_in: [Int!]
  video_length_lt: Int
  video_length_lte: Int
  video_length_gt: Int
  video_length_gte: Int
  unique_users: Int
  unique_users_not: Int
  unique_users_in: [Int!]
  unique_users_not_in: [Int!]
  unique_users_lt: Int
  unique_users_lte: Int
  unique_users_gt: Int
  unique_users_gte: Int
  real_minutes_watched: Int
  real_minutes_watched_not: Int
  real_minutes_watched_in: [Int!]
  real_minutes_watched_not_in: [Int!]
  real_minutes_watched_lt: Int
  real_minutes_watched_lte: Int
  real_minutes_watched_gt: Int
  real_minutes_watched_gte: Int
  avg_minutes_watched: Int
  avg_minutes_watched_not: Int
  avg_minutes_watched_in: [Int!]
  avg_minutes_watched_not_in: [Int!]
  avg_minutes_watched_lt: Int
  avg_minutes_watched_lte: Int
  avg_minutes_watched_gt: Int
  avg_minutes_watched_gte: Int
  exponent_applied: Int
  exponent_applied_not: Int
  exponent_applied_in: [Int!]
  exponent_applied_not_in: [Int!]
  exponent_applied_lt: Int
  exponent_applied_lte: Int
  exponent_applied_gt: Int
  exponent_applied_gte: Int
  minutes_after_exponent: Int
  minutes_after_exponent_not: Int
  minutes_after_exponent_in: [Int!]
  minutes_after_exponent_not_in: [Int!]
  minutes_after_exponent_lt: Int
  minutes_after_exponent_lte: Int
  minutes_after_exponent_gt: Int
  minutes_after_exponent_gte: Int
  AND: [VideoDataForMonthWhereInput!]
  OR: [VideoDataForMonthWhereInput!]
  NOT: [VideoDataForMonthWhereInput!]
}

input VideoDataForMonthWhereUniqueInput {
  id: ID
}

type VideoEdge {
    node: Video!
    cursor: String!
}

enum VideoOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    updatedAt_ASC
    updatedAt_DESC
    title_ASC
    title_DESC
    description_ASC
    description_DESC
    publish_date_ASC
    publish_date_DESC
    file_url_ASC
    file_url_DESC
    video_duration_ASC
    video_duration_DESC
    preview_url_ASC
    preview_url_DESC
    preview_video_url_ASC
    preview_video_url_DESC
    preview_video_duration_ASC
    preview_video_duration_DESC
    deleted_ASC
    deleted_DESC
}

type VideoParameters {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  video: Video!
  owner1: User
  owner1_percentage: Int!
  owner2: User
  owner2_percentage: Int!
  owner3: User
  owner3_percentage: Int!
}

type VideoParametersConnection {
  pageInfo: PageInfo!
  edges: [VideoParametersEdge]!
  aggregate: AggregateVideoParameters!
}

input VideoParametersCreateInput {
  video: VideoCreateOneInput!
  owner1: UserCreateOneInput
  owner1_percentage: Int!
  owner2: UserCreateOneInput
  owner2_percentage: Int!
  owner3: UserCreateOneInput
  owner3_percentage: Int!
}

type VideoParametersEdge {
  node: VideoParameters!
  cursor: String!
}

type VideoParametersForMonth {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  video: Video!
  owner1: User
  owner1_percentage: Int!
  owner2: User
  owner2_percentage: Int!
  owner3: User
  owner3_percentage: Int!
  total_minutes: Float!
  owner1_minutes: Float!
  owner2_minutes: Float!
  owner3_minutes: Float!
}

type VideoParametersForMonthConnection {
  pageInfo: PageInfo!
  edges: [VideoParametersForMonthEdge]!
  aggregate: AggregateVideoParametersForMonth!
}

input VideoParametersForMonthCreateInput {
  year: Int!
  month: Int!
  video: VideoCreateOneInput!
  owner1: UserCreateOneInput
  owner1_percentage: Int!
  owner2: UserCreateOneInput
  owner2_percentage: Int!
  owner3: UserCreateOneInput
  owner3_percentage: Int!
  total_minutes: Float
  owner1_minutes: Float
  owner2_minutes: Float
  owner3_minutes: Float
}

type VideoParametersForMonthEdge {
  node: VideoParametersForMonth!
  cursor: String!
}

enum VideoParametersForMonthOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  year_ASC
  year_DESC
  month_ASC
  month_DESC
  owner1_percentage_ASC
  owner1_percentage_DESC
  owner2_percentage_ASC
  owner2_percentage_DESC
  owner3_percentage_ASC
  owner3_percentage_DESC
  total_minutes_ASC
  total_minutes_DESC
  owner1_minutes_ASC
  owner1_minutes_DESC
  owner2_minutes_ASC
  owner2_minutes_DESC
  owner3_minutes_ASC
  owner3_minutes_DESC
}

type VideoParametersForMonthPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  year: Int!
  month: Int!
  owner1_percentage: Int!
  owner2_percentage: Int!
  owner3_percentage: Int!
  total_minutes: Float!
  owner1_minutes: Float!
  owner2_minutes: Float!
  owner3_minutes: Float!
}

type VideoParametersForMonthSubscriptionPayload {
  mutation: MutationType!
  node: VideoParametersForMonth
  updatedFields: [String!]
  previousValues: VideoParametersForMonthPreviousValues
}

input VideoParametersForMonthSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VideoParametersForMonthWhereInput
  AND: [VideoParametersForMonthSubscriptionWhereInput!]
  OR: [VideoParametersForMonthSubscriptionWhereInput!]
  NOT: [VideoParametersForMonthSubscriptionWhereInput!]
}

input VideoParametersForMonthUpdateInput {
  year: Int
  month: Int
  video: VideoUpdateOneRequiredInput
  owner1: UserUpdateOneInput
  owner1_percentage: Int
  owner2: UserUpdateOneInput
  owner2_percentage: Int
  owner3: UserUpdateOneInput
  owner3_percentage: Int
  total_minutes: Float
  owner1_minutes: Float
  owner2_minutes: Float
  owner3_minutes: Float
}

input VideoParametersForMonthUpdateManyMutationInput {
  year: Int
  month: Int
  owner1_percentage: Int
  owner2_percentage: Int
  owner3_percentage: Int
  total_minutes: Float
  owner1_minutes: Float
  owner2_minutes: Float
  owner3_minutes: Float
}

input VideoParametersForMonthWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  video: VideoWhereInput
  owner1: UserWhereInput
  owner1_percentage: Int
  owner1_percentage_not: Int
  owner1_percentage_in: [Int!]
  owner1_percentage_not_in: [Int!]
  owner1_percentage_lt: Int
  owner1_percentage_lte: Int
  owner1_percentage_gt: Int
  owner1_percentage_gte: Int
  owner2: UserWhereInput
  owner2_percentage: Int
  owner2_percentage_not: Int
  owner2_percentage_in: [Int!]
  owner2_percentage_not_in: [Int!]
  owner2_percentage_lt: Int
  owner2_percentage_lte: Int
  owner2_percentage_gt: Int
  owner2_percentage_gte: Int
  owner3: UserWhereInput
  owner3_percentage: Int
  owner3_percentage_not: Int
  owner3_percentage_in: [Int!]
  owner3_percentage_not_in: [Int!]
  owner3_percentage_lt: Int
  owner3_percentage_lte: Int
  owner3_percentage_gt: Int
  owner3_percentage_gte: Int
  total_minutes: Float
  total_minutes_not: Float
  total_minutes_in: [Float!]
  total_minutes_not_in: [Float!]
  total_minutes_lt: Float
  total_minutes_lte: Float
  total_minutes_gt: Float
  total_minutes_gte: Float
  owner1_minutes: Float
  owner1_minutes_not: Float
  owner1_minutes_in: [Float!]
  owner1_minutes_not_in: [Float!]
  owner1_minutes_lt: Float
  owner1_minutes_lte: Float
  owner1_minutes_gt: Float
  owner1_minutes_gte: Float
  owner2_minutes: Float
  owner2_minutes_not: Float
  owner2_minutes_in: [Float!]
  owner2_minutes_not_in: [Float!]
  owner2_minutes_lt: Float
  owner2_minutes_lte: Float
  owner2_minutes_gt: Float
  owner2_minutes_gte: Float
  owner3_minutes: Float
  owner3_minutes_not: Float
  owner3_minutes_in: [Float!]
  owner3_minutes_not_in: [Float!]
  owner3_minutes_lt: Float
  owner3_minutes_lte: Float
  owner3_minutes_gt: Float
  owner3_minutes_gte: Float
  AND: [VideoParametersForMonthWhereInput!]
  OR: [VideoParametersForMonthWhereInput!]
  NOT: [VideoParametersForMonthWhereInput!]
}

input VideoParametersForMonthWhereUniqueInput {
  id: ID
}

enum VideoParametersOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  owner1_percentage_ASC
  owner1_percentage_DESC
  owner2_percentage_ASC
  owner2_percentage_DESC
  owner3_percentage_ASC
  owner3_percentage_DESC
}

type VideoParametersPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  owner1_percentage: Int!
  owner2_percentage: Int!
  owner3_percentage: Int!
}

type VideoParametersSubscriptionPayload {
  mutation: MutationType!
  node: VideoParameters
  updatedFields: [String!]
  previousValues: VideoParametersPreviousValues
}

input VideoParametersSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VideoParametersWhereInput
  AND: [VideoParametersSubscriptionWhereInput!]
  OR: [VideoParametersSubscriptionWhereInput!]
  NOT: [VideoParametersSubscriptionWhereInput!]
}

input VideoParametersUpdateInput {
  video: VideoUpdateOneRequiredInput
  owner1: UserUpdateOneInput
  owner1_percentage: Int
  owner2: UserUpdateOneInput
  owner2_percentage: Int
  owner3: UserUpdateOneInput
  owner3_percentage: Int
}

input VideoParametersUpdateManyMutationInput {
  owner1_percentage: Int
  owner2_percentage: Int
  owner3_percentage: Int
}

input VideoParametersWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  video: VideoWhereInput
  owner1: UserWhereInput
  owner1_percentage: Int
  owner1_percentage_not: Int
  owner1_percentage_in: [Int!]
  owner1_percentage_not_in: [Int!]
  owner1_percentage_lt: Int
  owner1_percentage_lte: Int
  owner1_percentage_gt: Int
  owner1_percentage_gte: Int
  owner2: UserWhereInput
  owner2_percentage: Int
  owner2_percentage_not: Int
  owner2_percentage_in: [Int!]
  owner2_percentage_not_in: [Int!]
  owner2_percentage_lt: Int
  owner2_percentage_lte: Int
  owner2_percentage_gt: Int
  owner2_percentage_gte: Int
  owner3: UserWhereInput
  owner3_percentage: Int
  owner3_percentage_not: Int
  owner3_percentage_in: [Int!]
  owner3_percentage_not_in: [Int!]
  owner3_percentage_lt: Int
  owner3_percentage_lte: Int
  owner3_percentage_gt: Int
  owner3_percentage_gte: Int
  AND: [VideoParametersWhereInput!]
  OR: [VideoParametersWhereInput!]
  NOT: [VideoParametersWhereInput!]
}

input VideoParametersWhereUniqueInput {
  id: ID
}

type VideoPreviousValues {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    deleted: Boolean!
}

input VideoScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    title: String
    title_not: String
    title_in: [String!]
    title_not_in: [String!]
    title_lt: String
    title_lte: String
    title_gt: String
    title_gte: String
    title_contains: String
    title_not_contains: String
    title_starts_with: String
    title_not_starts_with: String
    title_ends_with: String
    title_not_ends_with: String
    description: String
    description_not: String
    description_in: [String!]
    description_not_in: [String!]
    description_lt: String
    description_lte: String
    description_gt: String
    description_gte: String
    description_contains: String
    description_not_contains: String
    description_starts_with: String
    description_not_starts_with: String
    description_ends_with: String
    description_not_ends_with: String
    publish_date: DateTime
    publish_date_not: DateTime
    publish_date_in: [DateTime!]
    publish_date_not_in: [DateTime!]
    publish_date_lt: DateTime
    publish_date_lte: DateTime
    publish_date_gt: DateTime
    publish_date_gte: DateTime
    file_url: String
    file_url_not: String
    file_url_in: [String!]
    file_url_not_in: [String!]
    file_url_lt: String
    file_url_lte: String
    file_url_gt: String
    file_url_gte: String
    file_url_contains: String
    file_url_not_contains: String
    file_url_starts_with: String
    file_url_not_starts_with: String
    file_url_ends_with: String
    file_url_not_ends_with: String
    video_duration: Int
    video_duration_not: Int
    video_duration_in: [Int!]
    video_duration_not_in: [Int!]
    video_duration_lt: Int
    video_duration_lte: Int
    video_duration_gt: Int
    video_duration_gte: Int
    preview_url: String
    preview_url_not: String
    preview_url_in: [String!]
    preview_url_not_in: [String!]
    preview_url_lt: String
    preview_url_lte: String
    preview_url_gt: String
    preview_url_gte: String
    preview_url_contains: String
    preview_url_not_contains: String
    preview_url_starts_with: String
    preview_url_not_starts_with: String
    preview_url_ends_with: String
    preview_url_not_ends_with: String
    preview_video_url: String
    preview_video_url_not: String
    preview_video_url_in: [String!]
    preview_video_url_not_in: [String!]
    preview_video_url_lt: String
    preview_video_url_lte: String
    preview_video_url_gt: String
    preview_video_url_gte: String
    preview_video_url_contains: String
    preview_video_url_not_contains: String
    preview_video_url_starts_with: String
    preview_video_url_not_starts_with: String
    preview_video_url_ends_with: String
    preview_video_url_not_ends_with: String
    preview_video_duration: String
    preview_video_duration_not: String
    preview_video_duration_in: [String!]
    preview_video_duration_not_in: [String!]
    preview_video_duration_lt: String
    preview_video_duration_lte: String
    preview_video_duration_gt: String
    preview_video_duration_gte: String
    preview_video_duration_contains: String
    preview_video_duration_not_contains: String
    preview_video_duration_starts_with: String
    preview_video_duration_not_starts_with: String
    preview_video_duration_ends_with: String
    preview_video_duration_not_ends_with: String
    deleted: Boolean
    deleted_not: Boolean
    AND: [VideoScalarWhereInput!]
    OR: [VideoScalarWhereInput!]
    NOT: [VideoScalarWhereInput!]
}

type VideoSubscriptionPayload {
    mutation: MutationType!
    node: Video
    updatedFields: [String!]
    previousValues: VideoPreviousValues
}

input VideoSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: VideoWhereInput
    AND: [VideoSubscriptionWhereInput!]
    OR: [VideoSubscriptionWhereInput!]
    NOT: [VideoSubscriptionWhereInput!]
}

type VideoTotalParameters {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  minutes_watched_multiplier: Float!
  exponent_for_minutes_watched: Float!
  star_rating_multiplier: Float!
  star_rating_on_off: Boolean!
}

type VideoTotalParametersConnection {
  pageInfo: PageInfo!
  edges: [VideoTotalParametersEdge]!
  aggregate: AggregateVideoTotalParameters!
}

input VideoTotalParametersCreateInput {
  minutes_watched_multiplier: Float
  exponent_for_minutes_watched: Float
  star_rating_multiplier: Float
  star_rating_on_off: Boolean
}

type VideoTotalParametersEdge {
  node: VideoTotalParameters!
  cursor: String!
}

enum VideoTotalParametersOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  minutes_watched_multiplier_ASC
  minutes_watched_multiplier_DESC
  exponent_for_minutes_watched_ASC
  exponent_for_minutes_watched_DESC
  star_rating_multiplier_ASC
  star_rating_multiplier_DESC
  star_rating_on_off_ASC
  star_rating_on_off_DESC
}

type VideoTotalParametersPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  minutes_watched_multiplier: Float!
  exponent_for_minutes_watched: Float!
  star_rating_multiplier: Float!
  star_rating_on_off: Boolean!
}

type VideoTotalParametersSubscriptionPayload {
  mutation: MutationType!
  node: VideoTotalParameters
  updatedFields: [String!]
  previousValues: VideoTotalParametersPreviousValues
}

input VideoTotalParametersSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VideoTotalParametersWhereInput
  AND: [VideoTotalParametersSubscriptionWhereInput!]
  OR: [VideoTotalParametersSubscriptionWhereInput!]
  NOT: [VideoTotalParametersSubscriptionWhereInput!]
}

input VideoTotalParametersUpdateInput {
  minutes_watched_multiplier: Float
  exponent_for_minutes_watched: Float
  star_rating_multiplier: Float
  star_rating_on_off: Boolean
}

input VideoTotalParametersUpdateManyMutationInput {
  minutes_watched_multiplier: Float
  exponent_for_minutes_watched: Float
  star_rating_multiplier: Float
  star_rating_on_off: Boolean
}

input VideoTotalParametersWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  minutes_watched_multiplier: Float
  minutes_watched_multiplier_not: Float
  minutes_watched_multiplier_in: [Float!]
  minutes_watched_multiplier_not_in: [Float!]
  minutes_watched_multiplier_lt: Float
  minutes_watched_multiplier_lte: Float
  minutes_watched_multiplier_gt: Float
  minutes_watched_multiplier_gte: Float
  exponent_for_minutes_watched: Float
  exponent_for_minutes_watched_not: Float
  exponent_for_minutes_watched_in: [Float!]
  exponent_for_minutes_watched_not_in: [Float!]
  exponent_for_minutes_watched_lt: Float
  exponent_for_minutes_watched_lte: Float
  exponent_for_minutes_watched_gt: Float
  exponent_for_minutes_watched_gte: Float
  star_rating_multiplier: Float
  star_rating_multiplier_not: Float
  star_rating_multiplier_in: [Float!]
  star_rating_multiplier_not_in: [Float!]
  star_rating_multiplier_lt: Float
  star_rating_multiplier_lte: Float
  star_rating_multiplier_gt: Float
  star_rating_multiplier_gte: Float
  star_rating_on_off: Boolean
  star_rating_on_off_not: Boolean
  AND: [VideoTotalParametersWhereInput!]
  OR: [VideoTotalParametersWhereInput!]
  NOT: [VideoTotalParametersWhereInput!]
}

input VideoTotalParametersWhereUniqueInput {
  id: ID
}

input VideoUpdateDataInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserUpdateOneRequiredWithoutMy_videosInput
    categories: CategoryUpdateManyWithoutVideosInput
    like_users: UserUpdateManyWithoutLiked_videosInput
    watched_users: WatchedVideoUserUpdateManyWithoutVideoInput
    tags: TagUpdateManyWithoutVideosInput
    deleted: Boolean
}

input VideoUpdateInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserUpdateOneRequiredWithoutMy_videosInput
    categories: CategoryUpdateManyWithoutVideosInput
    like_users: UserUpdateManyWithoutLiked_videosInput
    watched_users: WatchedVideoUserUpdateManyWithoutVideoInput
    tags: TagUpdateManyWithoutVideosInput
    deleted: Boolean
}

input VideoUpdateManyDataInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    deleted: Boolean
}

input VideoUpdateManyMutationInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    deleted: Boolean
}

input VideoUpdateManyWithoutAuthorInput {
    create: [VideoCreateWithoutAuthorInput!]
    delete: [VideoWhereUniqueInput!]
    connect: [VideoWhereUniqueInput!]
    set: [VideoWhereUniqueInput!]
    disconnect: [VideoWhereUniqueInput!]
    update: [VideoUpdateWithWhereUniqueWithoutAuthorInput!]
    upsert: [VideoUpsertWithWhereUniqueWithoutAuthorInput!]
    deleteMany: [VideoScalarWhereInput!]
    updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithoutCategoriesInput {
    create: [VideoCreateWithoutCategoriesInput!]
    delete: [VideoWhereUniqueInput!]
    connect: [VideoWhereUniqueInput!]
    set: [VideoWhereUniqueInput!]
    disconnect: [VideoWhereUniqueInput!]
    update: [VideoUpdateWithWhereUniqueWithoutCategoriesInput!]
    upsert: [VideoUpsertWithWhereUniqueWithoutCategoriesInput!]
    deleteMany: [VideoScalarWhereInput!]
    updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithoutLike_usersInput {
    create: [VideoCreateWithoutLike_usersInput!]
    delete: [VideoWhereUniqueInput!]
    connect: [VideoWhereUniqueInput!]
    set: [VideoWhereUniqueInput!]
    disconnect: [VideoWhereUniqueInput!]
    update: [VideoUpdateWithWhereUniqueWithoutLike_usersInput!]
    upsert: [VideoUpsertWithWhereUniqueWithoutLike_usersInput!]
    deleteMany: [VideoScalarWhereInput!]
    updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithoutTagsInput {
    create: [VideoCreateWithoutTagsInput!]
    delete: [VideoWhereUniqueInput!]
    connect: [VideoWhereUniqueInput!]
    set: [VideoWhereUniqueInput!]
    disconnect: [VideoWhereUniqueInput!]
    update: [VideoUpdateWithWhereUniqueWithoutTagsInput!]
    upsert: [VideoUpsertWithWhereUniqueWithoutTagsInput!]
    deleteMany: [VideoScalarWhereInput!]
    updateMany: [VideoUpdateManyWithWhereNestedInput!]
}

input VideoUpdateManyWithWhereNestedInput {
    where: VideoScalarWhereInput!
    data: VideoUpdateManyDataInput!
}

input VideoUpdateOneRequiredInput {
    create: VideoCreateInput
    update: VideoUpdateDataInput
    upsert: VideoUpsertNestedInput
    connect: VideoWhereUniqueInput
}

input VideoUpdateOneWithoutWatched_usersInput {
    create: VideoCreateWithoutWatched_usersInput
    update: VideoUpdateWithoutWatched_usersDataInput
    upsert: VideoUpsertWithoutWatched_usersInput
    delete: Boolean
    disconnect: Boolean
    connect: VideoWhereUniqueInput
}

input VideoUpdateWithoutAuthorDataInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    categories: CategoryUpdateManyWithoutVideosInput
    like_users: UserUpdateManyWithoutLiked_videosInput
    watched_users: WatchedVideoUserUpdateManyWithoutVideoInput
    tags: TagUpdateManyWithoutVideosInput
    deleted: Boolean
}

input VideoUpdateWithoutCategoriesDataInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserUpdateOneRequiredWithoutMy_videosInput
    like_users: UserUpdateManyWithoutLiked_videosInput
    watched_users: WatchedVideoUserUpdateManyWithoutVideoInput
    tags: TagUpdateManyWithoutVideosInput
    deleted: Boolean
}

input VideoUpdateWithoutLike_usersDataInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserUpdateOneRequiredWithoutMy_videosInput
    categories: CategoryUpdateManyWithoutVideosInput
    watched_users: WatchedVideoUserUpdateManyWithoutVideoInput
    tags: TagUpdateManyWithoutVideosInput
    deleted: Boolean
}

input VideoUpdateWithoutTagsDataInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserUpdateOneRequiredWithoutMy_videosInput
    categories: CategoryUpdateManyWithoutVideosInput
    like_users: UserUpdateManyWithoutLiked_videosInput
    watched_users: WatchedVideoUserUpdateManyWithoutVideoInput
    deleted: Boolean
}

input VideoUpdateWithoutWatched_usersDataInput {
    title: String
    description: String
    publish_date: DateTime
    file_url: String
    video_duration: Int
    preview_url: String
    preview_video_url: String
    preview_video_duration: String
    author: UserUpdateOneRequiredWithoutMy_videosInput
    categories: CategoryUpdateManyWithoutVideosInput
    like_users: UserUpdateManyWithoutLiked_videosInput
    tags: TagUpdateManyWithoutVideosInput
    deleted: Boolean
}

input VideoUpdateWithWhereUniqueWithoutAuthorInput {
    where: VideoWhereUniqueInput!
    data: VideoUpdateWithoutAuthorDataInput!
}

input VideoUpdateWithWhereUniqueWithoutCategoriesInput {
    where: VideoWhereUniqueInput!
    data: VideoUpdateWithoutCategoriesDataInput!
}

input VideoUpdateWithWhereUniqueWithoutLike_usersInput {
    where: VideoWhereUniqueInput!
    data: VideoUpdateWithoutLike_usersDataInput!
}

input VideoUpdateWithWhereUniqueWithoutTagsInput {
    where: VideoWhereUniqueInput!
    data: VideoUpdateWithoutTagsDataInput!
}

input VideoUpsertNestedInput {
    update: VideoUpdateDataInput!
    create: VideoCreateInput!
}

input VideoUpsertWithoutWatched_usersInput {
    update: VideoUpdateWithoutWatched_usersDataInput!
    create: VideoCreateWithoutWatched_usersInput!
}

input VideoUpsertWithWhereUniqueWithoutAuthorInput {
    where: VideoWhereUniqueInput!
    update: VideoUpdateWithoutAuthorDataInput!
    create: VideoCreateWithoutAuthorInput!
}

input VideoUpsertWithWhereUniqueWithoutCategoriesInput {
    where: VideoWhereUniqueInput!
    update: VideoUpdateWithoutCategoriesDataInput!
    create: VideoCreateWithoutCategoriesInput!
}

input VideoUpsertWithWhereUniqueWithoutLike_usersInput {
    where: VideoWhereUniqueInput!
    update: VideoUpdateWithoutLike_usersDataInput!
    create: VideoCreateWithoutLike_usersInput!
}

input VideoUpsertWithWhereUniqueWithoutTagsInput {
    where: VideoWhereUniqueInput!
    update: VideoUpdateWithoutTagsDataInput!
    create: VideoCreateWithoutTagsInput!
}

input VideoWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    title: String
    title_not: String
    title_in: [String!]
    title_not_in: [String!]
    title_lt: String
    title_lte: String
    title_gt: String
    title_gte: String
    title_contains: String
    title_not_contains: String
    title_starts_with: String
    title_not_starts_with: String
    title_ends_with: String
    title_not_ends_with: String
    description: String
    description_not: String
    description_in: [String!]
    description_not_in: [String!]
    description_lt: String
    description_lte: String
    description_gt: String
    description_gte: String
    description_contains: String
    description_not_contains: String
    description_starts_with: String
    description_not_starts_with: String
    description_ends_with: String
    description_not_ends_with: String
    publish_date: DateTime
    publish_date_not: DateTime
    publish_date_in: [DateTime!]
    publish_date_not_in: [DateTime!]
    publish_date_lt: DateTime
    publish_date_lte: DateTime
    publish_date_gt: DateTime
    publish_date_gte: DateTime
    file_url: String
    file_url_not: String
    file_url_in: [String!]
    file_url_not_in: [String!]
    file_url_lt: String
    file_url_lte: String
    file_url_gt: String
    file_url_gte: String
    file_url_contains: String
    file_url_not_contains: String
    file_url_starts_with: String
    file_url_not_starts_with: String
    file_url_ends_with: String
    file_url_not_ends_with: String
    video_duration: Int
    video_duration_not: Int
    video_duration_in: [Int!]
    video_duration_not_in: [Int!]
    video_duration_lt: Int
    video_duration_lte: Int
    video_duration_gt: Int
    video_duration_gte: Int
    preview_url: String
    preview_url_not: String
    preview_url_in: [String!]
    preview_url_not_in: [String!]
    preview_url_lt: String
    preview_url_lte: String
    preview_url_gt: String
    preview_url_gte: String
    preview_url_contains: String
    preview_url_not_contains: String
    preview_url_starts_with: String
    preview_url_not_starts_with: String
    preview_url_ends_with: String
    preview_url_not_ends_with: String
    preview_video_url: String
    preview_video_url_not: String
    preview_video_url_in: [String!]
    preview_video_url_not_in: [String!]
    preview_video_url_lt: String
    preview_video_url_lte: String
    preview_video_url_gt: String
    preview_video_url_gte: String
    preview_video_url_contains: String
    preview_video_url_not_contains: String
    preview_video_url_starts_with: String
    preview_video_url_not_starts_with: String
    preview_video_url_ends_with: String
    preview_video_url_not_ends_with: String
    preview_video_duration: String
    preview_video_duration_not: String
    preview_video_duration_in: [String!]
    preview_video_duration_not_in: [String!]
    preview_video_duration_lt: String
    preview_video_duration_lte: String
    preview_video_duration_gt: String
    preview_video_duration_gte: String
    preview_video_duration_contains: String
    preview_video_duration_not_contains: String
    preview_video_duration_starts_with: String
    preview_video_duration_not_starts_with: String
    preview_video_duration_ends_with: String
    preview_video_duration_not_ends_with: String
    author: UserWhereInput
    categories_every: CategoryWhereInput
    categories_some: CategoryWhereInput
    categories_none: CategoryWhereInput
    like_users_every: UserWhereInput
    like_users_some: UserWhereInput
    like_users_none: UserWhereInput
    watched_users_every: WatchedVideoUserWhereInput
    watched_users_some: WatchedVideoUserWhereInput
    watched_users_none: WatchedVideoUserWhereInput
    tags_every: TagWhereInput
    tags_some: TagWhereInput
    tags_none: TagWhereInput
    deleted: Boolean
    deleted_not: Boolean
    AND: [VideoWhereInput!]
    OR: [VideoWhereInput!]
    NOT: [VideoWhereInput!]
}

input VideoWhereUniqueInput {
  id: ID
}

type WatchedVideoUser {
  id: ID!
  video: Video
  user: User!
  watched_seconds: Int!
}

type WatchedVideoUserConnection {
  pageInfo: PageInfo!
  edges: [WatchedVideoUserEdge]!
  aggregate: AggregateWatchedVideoUser!
}

input WatchedVideoUserCreateInput {
  video: VideoCreateOneWithoutWatched_usersInput
  user: UserCreateOneWithoutWatched_videosInput!
  watched_seconds: Int
}

input WatchedVideoUserCreateManyWithoutUserInput {
  create: [WatchedVideoUserCreateWithoutUserInput!]
  connect: [WatchedVideoUserWhereUniqueInput!]
}

input WatchedVideoUserCreateManyWithoutVideoInput {
  create: [WatchedVideoUserCreateWithoutVideoInput!]
  connect: [WatchedVideoUserWhereUniqueInput!]
}

input WatchedVideoUserCreateWithoutUserInput {
  video: VideoCreateOneWithoutWatched_usersInput
  watched_seconds: Int
}

input WatchedVideoUserCreateWithoutVideoInput {
  user: UserCreateOneWithoutWatched_videosInput!
  watched_seconds: Int
}

type WatchedVideoUserEdge {
  node: WatchedVideoUser!
  cursor: String!
}

enum WatchedVideoUserOrderByInput {
  id_ASC
  id_DESC
  watched_seconds_ASC
  watched_seconds_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type WatchedVideoUserPreviousValues {
  id: ID!
  watched_seconds: Int!
}

input WatchedVideoUserScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  watched_seconds: Int
  watched_seconds_not: Int
  watched_seconds_in: [Int!]
  watched_seconds_not_in: [Int!]
  watched_seconds_lt: Int
  watched_seconds_lte: Int
  watched_seconds_gt: Int
  watched_seconds_gte: Int
  AND: [WatchedVideoUserScalarWhereInput!]
  OR: [WatchedVideoUserScalarWhereInput!]
  NOT: [WatchedVideoUserScalarWhereInput!]
}

type WatchedVideoUserSubscriptionPayload {
  mutation: MutationType!
  node: WatchedVideoUser
  updatedFields: [String!]
  previousValues: WatchedVideoUserPreviousValues
}

input WatchedVideoUserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: WatchedVideoUserWhereInput
  AND: [WatchedVideoUserSubscriptionWhereInput!]
  OR: [WatchedVideoUserSubscriptionWhereInput!]
  NOT: [WatchedVideoUserSubscriptionWhereInput!]
}

input WatchedVideoUserUpdateInput {
  video: VideoUpdateOneWithoutWatched_usersInput
  user: UserUpdateOneRequiredWithoutWatched_videosInput
  watched_seconds: Int
}

input WatchedVideoUserUpdateManyDataInput {
  watched_seconds: Int
}

input WatchedVideoUserUpdateManyMutationInput {
  watched_seconds: Int
}

input WatchedVideoUserUpdateManyWithoutUserInput {
  create: [WatchedVideoUserCreateWithoutUserInput!]
  delete: [WatchedVideoUserWhereUniqueInput!]
  connect: [WatchedVideoUserWhereUniqueInput!]
  set: [WatchedVideoUserWhereUniqueInput!]
  disconnect: [WatchedVideoUserWhereUniqueInput!]
  update: [WatchedVideoUserUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [WatchedVideoUserUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [WatchedVideoUserScalarWhereInput!]
  updateMany: [WatchedVideoUserUpdateManyWithWhereNestedInput!]
}

input WatchedVideoUserUpdateManyWithoutVideoInput {
  create: [WatchedVideoUserCreateWithoutVideoInput!]
  delete: [WatchedVideoUserWhereUniqueInput!]
  connect: [WatchedVideoUserWhereUniqueInput!]
  set: [WatchedVideoUserWhereUniqueInput!]
  disconnect: [WatchedVideoUserWhereUniqueInput!]
  update: [WatchedVideoUserUpdateWithWhereUniqueWithoutVideoInput!]
  upsert: [WatchedVideoUserUpsertWithWhereUniqueWithoutVideoInput!]
  deleteMany: [WatchedVideoUserScalarWhereInput!]
  updateMany: [WatchedVideoUserUpdateManyWithWhereNestedInput!]
}

input WatchedVideoUserUpdateManyWithWhereNestedInput {
  where: WatchedVideoUserScalarWhereInput!
  data: WatchedVideoUserUpdateManyDataInput!
}

input WatchedVideoUserUpdateWithoutUserDataInput {
  video: VideoUpdateOneWithoutWatched_usersInput
  watched_seconds: Int
}

input WatchedVideoUserUpdateWithoutVideoDataInput {
  user: UserUpdateOneRequiredWithoutWatched_videosInput
  watched_seconds: Int
}

input WatchedVideoUserUpdateWithWhereUniqueWithoutUserInput {
  where: WatchedVideoUserWhereUniqueInput!
  data: WatchedVideoUserUpdateWithoutUserDataInput!
}

input WatchedVideoUserUpdateWithWhereUniqueWithoutVideoInput {
  where: WatchedVideoUserWhereUniqueInput!
  data: WatchedVideoUserUpdateWithoutVideoDataInput!
}

input WatchedVideoUserUpsertWithWhereUniqueWithoutUserInput {
  where: WatchedVideoUserWhereUniqueInput!
  update: WatchedVideoUserUpdateWithoutUserDataInput!
  create: WatchedVideoUserCreateWithoutUserInput!
}

input WatchedVideoUserUpsertWithWhereUniqueWithoutVideoInput {
  where: WatchedVideoUserWhereUniqueInput!
  update: WatchedVideoUserUpdateWithoutVideoDataInput!
  create: WatchedVideoUserCreateWithoutVideoInput!
}

input WatchedVideoUserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  video: VideoWhereInput
  user: UserWhereInput
  watched_seconds: Int
  watched_seconds_not: Int
  watched_seconds_in: [Int!]
  watched_seconds_not_in: [Int!]
  watched_seconds_lt: Int
  watched_seconds_lte: Int
  watched_seconds_gt: Int
  watched_seconds_gte: Int
  AND: [WatchedVideoUserWhereInput!]
  OR: [WatchedVideoUserWhereInput!]
  NOT: [WatchedVideoUserWhereInput!]
}

input WatchedVideoUserWhereUniqueInput {
  id: ID
  myId: ID
}

type SignupStatsResult {
    begin: DateTime
    end: DateTime
    signupCount: Int
}

type VideoStatsResult {
    id: String
    title: String
    timespans: [TimeSpan]
}

type PayoutStatsResult {
    due_months: [DueMonthStats]
    artists: [ArtistStats]
}

type DueMonthStats {
    year: Int
    month: Int
    due_amount: Int
}

type ArtistStats {
    id: String
    firstname: String
    lastname: String
    username: String
    email: String
    approved: Boolean
    promo_code: String
    payout_amount: Int
    payout_months_total: Int
    promo_code_uses: Int
    timespans: [PayoutTimeSpan]
}

type PayoutTimeSpan {
    year: Int
    month: Int
    due_amount: Int
    payout_amount: Int
}

type ArtistStatsResult {
    id: ID!
    fistname: String
    lastname: String
    username: String
    email: String!
    phone: String
    viewCount: Int
    playSeconds: Int
    realPlaySeconds: Int
}

type TimeSpan {
    begin: DateTime
    end: DateTime
    userEventCount: Int
    uniqueUserCount: Int
    playSeconds: Int
    realPlaySeconds: Int
}

type ChargeStatsResult {
    begin: DateTime
    end: DateTime
    monthlyChargeCount: Int
    monthlyChargeAmount: Int
    yearlyChargeCount: Int
    yearlyChargeAmount: Int
    totalChargeCount: Int
    totalChargeAmount: Int
}

type SubscriptionStatsResult {
    begin: DateTime
    end: DateTime
    monthlySubscriptionCount: Int
    yearlySubscriptionCount: Int
    totalSubscriptionCount: Int
}